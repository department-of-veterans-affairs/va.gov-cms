The goal of Drupal CMS is to provide an efficient and scaled way for VA employees (also known as editors) to generate content that will allow veterans to quickly and easily get the information they need about their benefits. 

When responding to ad-hoc incidents, the CMS team should use the following framework: first, answer each question, then weigh the answers to determine the best course of action.

## Impact 
How much would this impact a user trying to complete their tasks? Answering these questions will help us understand the severity of an incident and the best action to take. When evaluating impact, the team should prioritize veterans impact above all other user groups. 

If the incident or new product feature is categorized with high severity, then the incident should be addressed quickly and then the team should conduct a retro within 48 hours of the incidents, to understand the root cause and how it could be prevented in the future. 

If the incident is categorized with medium severity, then:
- Connect with the CMS product manager to determine if the team should break sprint to fix the issue. If not, then prioritize the work in an upcoming sprint. If needed the CMS product manager to loop in the CMS product owner to determine the best course of action.

If the incident is categorized with low severity, then:
- The incident will be categorized as a defect or feature request, documented in a ticket and added to the backlog (either the Icebox or Ready for Sprint). 

Questions to answer:
Impact to veterans
- Does this block most (over 50%) veterans from accessing most (over 50%) content that is generated through Drupal CMS? If yes, then high severity. If no, then medium or low severity. 
- Does this block most (over 50%) veterans from accessing critical and accurate content that is generated through Drupal CMS? If yes, then high severity. If no, then medium or low severity. 
Examples of critical content: content related to veteran benefits or a facility's operating status. 

Impact to editors 
- Does this block most (over 50%) editors from generating most (over 50%) content in Drupal CMS? If yes, then high severity. If no, then medium or low severity.
- Does this block most (over 50%) editors from generating critical content through Drupal CMS? If yes, then high severity. If no, then medium or low severity. 

Impact to product teams
- Does this block most (over 50%) developers from doing any development work in Drupal CMS? If yes, then high severity. If no, then medium or low severity. 
