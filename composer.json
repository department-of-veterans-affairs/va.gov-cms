{
    "name": "va-gov/cms",
    "description": "The CMS for VA.gov",
    "type": "project",
    "license": "GPL-2.0+",
    "minimum-stability": "dev",
    "prefer-stable": true,
    "require-dev": {
        "behat/mink": "^1.10",
        "behat/mink-browserkit-driver": "^2.1",
        "digitalrevolution/php-codesniffer-baseline": "^1.1",
        "drupal/devel": "5.3.1",
        "drupal/html_tag_usage": "^1.0@beta",
        "drupal/media_entity_generic": "^1.0",
        "palantirnet/drupal-rector": "^0.20.1"
    },
    "require": {
        "bower-asset/cropper": "^4.1",
        "caxy/php-htmldiff": "^0.1.14",
        "composer/installers": "^2.2",
        "consolidation/site-process": "^5.2",
        "cweagans/composer-patches": "^1.7",
        "datadog/dd-trace": "^1.2.0",
        "dealerdirect/phpcodesniffer-composer-installer": "0.7.2",
        "drupal/address": "^2.0",
        "drupal/admin_feedback": "^2.2",
        "drupal/admin_toolbar": "^3.3",
        "drupal/advancedqueue": "^1.0@RC",
        "drupal/allow_only_one": "1.0.3",
        "drupal/allowed_formats": "^3.0",
        "drupal/animated_gif": "^2.1",
        "drupal/auto_entitylabel": "^3.2",
        "drupal/better_exposed_filters": "^6.0",
        "drupal/cer": "^5.0@beta",
        "drupal/change_labels": "dev-3326097-remove-dependency-on-drupal-autoservices#7f92f90b456ac2f394dd434257e39e1d9b3086eb",
        "drupal/ckeditor_abbreviation": "^5.0@alpha",
        "drupal/clientside_validation": "^4.1",
        "drupal/coder": "^8.3",
        "drupal/codit_batch_operations": "^1.0",
        "drupal/codit_menu_tools": "^1.0@alpha",
        "drupal/components": "^3.0@beta",
        "drupal/computed_breadcrumbs": "^1.1",
        "drupal/config_ignore": "^2.1",
        "drupal/config_override_warn": "^1.0",
        "drupal/config_split": "^1.10",
        "drupal/config_view": "^9.0",
        "drupal/config_views": "^2.0",
        "drupal/consumer_image_styles": "^4.0",
        "drupal/consumers": "^1.17.0",
        "drupal/content_lock": "^2.3",
        "drupal/content_model_documentation": "^1.0.19",
        "drupal/core-composer-scaffold": "^10.2.0",
        "drupal/core-recommended": "^10.2.0",
        "drupal/crop": "^2.0",
        "drupal/csv_serialization": "^4.0",
        "drupal/ctools_block": "^4.0",
        "drupal/default_content_deploy": "^2.1",
        "drupal/devel_entity_updates": "^4.1",
        "drupal/diff": "^1.0",
        "drupal/dropzonejs": "^2.0",
        "drupal/dynamic_entity_reference": "^3.0",
        "drupal/easy_breadcrumb": "^2.0",
        "drupal/eca": "^2.0",
        "drupal/eca_cm": "^1.0",
        "drupal/embed": "^1.3",
        "drupal/entity_block": "^1.0@beta",
        "drupal/entity_browser": "^2.4",
        "drupal/entity_browser_table": "^1.4",
        "drupal/entity_clone": "^2.0@alpha",
        "drupal/entity_diff_ui": "^2.0@alpha",
        "drupal/entity_field_fetch": "^1.0@beta",
        "drupal/entity_reference_hierarchy": "^1.0@beta",
        "drupal/entity_reference_revisions": "^1.7",
        "drupal/entity_reference_unpublished": "^2.0",
        "drupal/entity_reference_validators": "^1.0@alpha",
        "drupal/entity_route_context": "^4.0@RC",
        "drupal/entity_update": "^3.0",
        "drupal/entity_usage": "^2.0@beta",
        "drupal/entity_usage_addons": "^2.0",
        "drupal/entityqueue": "^1.2",
        "drupal/environment_indicator": "^4.0",
        "drupal/epp": "^1.1",
        "drupal/expirable_content": "^1.0@alpha",
        "drupal/fast_404": "^3.0",
        "drupal/feature_toggle": "^2.0",
        "drupal/field_group": "^3.4",
        "drupal/fieldhelptext": "^1.0@beta",
        "drupal/flag": "^4.0@beta",
        "drupal/flood_control": "^3.0.0",
        "drupal/force_users_logout": "^2.0",
        "drupal/formdazzle": "^4.0",
        "drupal/ga4_google_analytics": "^1.1",
        "drupal/geocoder": "^4.4",
        "drupal/geofield": "^1.39",
        "drupal/geofield_map": "^11.0",
        "drupal/google_analytics": "^4.0",
        "drupal/govdelivery_bulletins": "^1.2",
        "drupal/graphql": "^3.4",
        "drupal/graphql_core": "^3.1.0",
        "drupal/graphql_menu": "^1.0@alpha",
        "drupal/graphql_metatag": "^1.0",
        "drupal/health_check_url": "^3.0",
        "drupal/hierarchy_manager": "^3.0",
        "drupal/hms_field": "^2.0",
        "drupal/hook_event_dispatcher": "4.2.0",
        "drupal/ief_table_view_mode": "^3.0",
        "drupal/image_style_warmer": "^1.2@RC",
        "drupal/image_widget_crop": "^2.2",
        "drupal/jsonapi_extras": "3.26",
        "drupal/jsonapi_hypermedia": "^1.9",
        "drupal/jsonapi_image_styles": "^3.0",
        "drupal/jsonapi_menu_items": "^1.2",
        "drupal/jsonapi_resources": "^1.0@beta",
        "drupal/jsonapi_views": "^1.0",
        "drupal/libraries": "^4.0",
        "drupal/limited_field_widgets": "^3.0@alpha",
        "drupal/linkit": "^6.0@RC",
        "drupal/linky": "^2.0@beta",
        "drupal/linkychecker": "^2.2",
        "drupal/linkyreplacer": "^2.2",
        "drupal/markup": "^2.0",
        "drupal/media_file_delete": "^1.3",
        "drupal/memcache": "^2.5.0",
        "drupal/memcache_admin": "^2.5.0",
        "drupal/menu_breadcrumb": "^2.0@alpha",
        "drupal/menu_export": "^1.2",
        "drupal/menu_force": "^2.0",
        "drupal/menu_item_extras": "^3.0",
        "drupal/menu_link_attributes": "^1.2",
        "drupal/menu_normalizer": "^2.0",
        "drupal/message": "^1.2",
        "drupal/message_notify": "^1.2",
        "drupal/message_subscribe": "^2.0",
        "drupal/message_ui": "^1.0@beta",
        "drupal/metatag": "^2.1",
        "drupal/migrate_plus": "^6.0",
        "drupal/migrate_source_csv": "^3.4",
        "drupal/migrate_source_ui": "^1.0",
        "drupal/migrate_tools": "^6.0",
        "drupal/migration_tools": "^2.8",
        "drupal/mimemail": "^1.0@alpha",
        "drupal/monolog": "^3.0",
        "drupal/next": "^1.1",
        "drupal/no_table_drag": "^2.0@alpha",
        "drupal/node_link_report": "^1.14",
        "drupal/node_revision_delete": "^2.0",
        "drupal/node_title_help_text": "^1.0",
        "drupal/office_hours": "^1.9",
        "drupal/openapi": "^2.0@RC",
        "drupal/openapi_jsonapi": "^3.0",
        "drupal/openapi_ui": "^1.0@RC",
        "drupal/openapi_ui_swagger": "^1.0",
        "drupal/override_node_options": "^2.4",
        "drupal/paragraphs": "^1.5",
        "drupal/paragraphs_browser": "^1.1",
        "drupal/paragraphs_features": "^2.0@beta",
        "drupal/paragraphs_usage": "^1.0",
        "drupal/password_policy": "^4.0",
        "drupal/password_strength": "2.x-dev@dev",
        "drupal/path_redirect_import": "^2.0",
        "drupal/pathauto": "^1.6",
        "drupal/pathologic": "^2.0@alpha",
        "drupal/pfm": "^2.0",
        "drupal/post_api": "^2.0.3",
        "drupal/prometheus_exporter": "^2.0@beta",
        "drupal/raven": "^6.0",
        "drupal/rdf": "^2.1",
        "drupal/redirect": "^1.3",
        "drupal/redirect_options": "^2.1",
        "drupal/restui": "^1.16",
        "drupal/role_delegation": "1.3.0",
        "drupal/s3fs": "^3.6",
        "drupal/schemata": "^1.0",
        "drupal/search_api": "^1.29.0",
        "drupal/seckit": "^2.0",
        "drupal/simplesamlphp_auth": "^4.0@RC",
        "drupal/sitewide_alert": "^2.0",
        "drupal/slack": "^1.3",
        "drupal/smart_date": "^4.2.0",
        "drupal/social_media_links": "^2.10",
        "drupal/string_field_formatter": "^2.0",
        "drupal/styleguide": "^2.0@beta",
        "drupal/tablefield": "^2.4",
        "drupal/taxonomy_entity_index": "^1.1",
        "drupal/taxonomy_menu": "^3.6",
        "drupal/textfield_counter": "^2.3",
        "drupal/tmgmt": "^1.17",
        "drupal/toolbar_menu": "^3.0",
        "drupal/twig_tweak": "^3.4",
        "drupal/tzfield": "^1.7",
        "drupal/upgrade_status": "^4.0",
        "drupal/user_history": "^1.0@alpha",
        "drupal/video_embed_media": "^2.2",
        "drupal/viewfield": "^3.0@beta",
        "drupal/views_bulk_edit": "^3.0",
        "drupal/views_bulk_operations": "^4.3",
        "drupal/views_conditional": "^1.4",
        "drupal/views_data_export": "^1.4",
        "drupal/views_local_tasks": "^1.0",
        "drupal/workbench_access": "^2.0",
        "drupal/workbench_menu_access": "^2.1",
        "drush/drush": "12.5.3",
        "easyrdf/easyrdf": "1.1.1 as 0.9.1",
        "geocoder-php/mapbox-provider": "^1.3",
        "giggsey/libphonenumber-for-php": "^8.13",
        "gitonomy/gitlib": "^1.2",
        "http-interop/http-factory-guzzle": "^1.0",
        "knplabs/github-api": "^3.0",
        "mglaman/phpstan-drupal": "^1.0",
        "michelf/php-markdown": "^2.0",
        "mikey179/vfsstream": "^1.6",
        "mnsami/composer-custom-directory-installer": "^2.0",
        "npm-asset/dropzone": "^5.5",
        "npm-asset/jquery-validation": "^1.17",
        "npm-asset/yarn": "1.19.1",
        "oomphinc/composer-installers-extender": "^2.0",
        "orakili/composer-drupal-info-file-patch-helper": "*",
        "php-http/guzzle7-adapter": "^1.0",
        "phpspec/prophecy": "^1.15",
        "phpspec/prophecy-phpunit": "^2.0",
        "phpstan/phpstan": "^1.0",
        "phpstan/phpstan-deprecation-rules": "^1.0",
        "phpunit/phpunit": "^9.3.0",
        "querypath/querypath": "^3.0",
        "simplesamlphp/simplesamlphp": "^2.1",
        "squizlabs/php_codesniffer": "^3.5",
        "symfony/browser-kit": "^6.3",
        "symfony/console": "^6.2",
        "symfony/phpunit-bridge": "^7.1",
        "symfony/process": "^6.3",
        "symfony/routing": "^6.3",
        "va-gov/content-build": "0.0.3702",
        "vlucas/phpdotenv": "^5.6",
        "webflo/drupal-finder": "1.3.1",
        "webmozart/path-util": "^2.3",
        "webonyx/graphql-php": "^14.11",
        "weitzman/drupal-test-traits": "^2.0.1",
        "zaporylie/composer-drupal-optimizations": "^1.2"
    },
    "autoload": {
        "psr-4": {
            "Drupal\\va_gov_backend\\": "docroot/modules/custom/va_gov_backend/src",
            "Drupal\\va_gov_flags\\": "docroot/modules/custom/va_gov_flags/src",
            "Tests\\": "tests/phpunit",
            "tests\\": "tests"
        },
        "files": [
            "scripts/composer/EnvironmentHandler.php"
        ]
    },
    "repositories": {
        "drupal": {
            "type": "composer",
            "url": "https://packages.drupal.org/8",
            "exclude": [
                "drupal/change_labels"
            ]
        },
        "assets": {
            "type": "composer",
            "url": "https://asset-packagist.org"
        },
        "ewa": {
            "type": "git",
            "url": "https://github.com/agilesix/workflow_assignments.git"
        },
        "tippyjs/6.x": {
            "type": "package",
            "package": {
                "name": "tippyjs/6.x",
                "version": "6.2.6",
                "type": "drupal-library",
                "extra": {
                    "installer-name": "tippyjs/6.x"
                },
                "dist": {
                    "url": "https://unpkg.com/tippy.js@6.2.6/dist/tippy-bundle.umd.min.js",
                    "type": "file"
                },
                "require": {
                    "composer/installers": "~1.0"
                }
            }
        },
        "drupal/change_labels": {
            "type": "git",
            "url": "https://git.drupalcode.org/issue/change_labels-3326097.git"
        }
    },
    "config": {
        "apcu-autoloader": true,
        "discard-changes": true,
        "process-timeout": 0,
        "bin-dir": "bin",
        "vendor-dir": "docroot/vendor",
        "sort-packages": true,
        "optimize-autoloader": true,
        "platform": {
            "php": "8.1.30"
        },
        "preferred-install": {
            "va-gov/content-build": "source",
            "*": "dist"
        },
        "allow-plugins": {
            "simplesamlphp/composer-module-installer": true,
            "composer/installers": true,
            "drupal/core-composer-scaffold": true,
            "zaporylie/composer-drupal-optimizations": true,
            "drupal/console-extend-plugin": true,
            "oomphinc/composer-installers-extender": true,
            "dealerdirect/phpcodesniffer-composer-installer": true,
            "php-http/discovery": true,
            "cweagans/composer-patches": true,
            "orakili/composer-drupal-info-file-patch-helper": true,
            "digitalrevolution/php-codesniffer-baseline": true,
            "mnsami/composer-custom-directory-installer": true,
            "simplesamlphp/composer-xmlprovider-installer": true
        }
    },
    "extra": {
        "drupal-scaffold": {
            "file-mapping": {
                "[project-root]/.gitattributes": false,
                "[web-root]/.editorconfig": false,
                "[web-root]/.htaccess": false,
                "[web-root]/.ht.router.php": false,
                "[web-root]/INSTALL.txt": false,
                "[web-root]/README.txt": false,
                "[web-root]/example.gitignore": false,
                "[web-root]/modules/README.txt": false,
                "[web-root]/profiles/README.txt": false,
                "[web-root]/sites/README.txt": false,
                "[web-root]/themes/README.txt": false
            },
            "locations": {
                "web-root": "docroot/"
            }
        },
        "installer-types": [
            "bower-asset",
            "npm-asset"
        ],
        "installer-paths": {
            "docroot/core": [
                "type:drupal-core"
            ],
            "docroot/libraries/{$name}": [
                "swagger-api/swagger-ui",
                "type:drupal-library",
                "type:bower-asset",
                "type:npm-asset"
            ],
            "docroot/modules/contrib/{$name}": [
                "type:drupal-module"
            ],
            "docroot/profiles/contrib/{$name}": [
                "type:drupal-profile"
            ],
            "docroot/themes/contrib/{$name}": [
                "type:drupal-theme"
            ],
            "drush/contrib/{$name}": [
                "type:drupal-drush"
            ]
        },
        "enable-patching": true,
        "composer-exit-on-patch-failure": true,
        "patches-ignore": {},
        "patches": {
            "drupal/cer": {
                "3200122 - Remove delete hook": "patches/3200122-delete-hook-added-in-dev-causes-test-failures.patch",
                "3254663 - Notice: Undefined index: target_bundles on Drupal\\cer\\Entity\\CorrespondingReference->synchronizeCorrespondingField()": "patches/3254669-prevent-undefined-index.patch"
            },
            "drupal/clientside_validation": {
                "2949540 - Allow all forms or selected forms": "patches/2949540-allow-all-forms-selected-forms.patch"
            },
            "drupal/content_lock": {
                "2951652 - Content lock causes redirect response preventing migration rollback.": "patches/2951652-content-lock-causes-redirect-response-preventing-migration-rollback.patch"
            },
            "drupal/core": {
                "3057267 - User logout during maintenance mode": "patches/3057267-maintenance-forced-logout-experimental.patch",
                "2893933 - claimItem in the database and memory queues does not use expire correctly": "patches/2893933-queue-lease-time.patch",
                "3025164 - Make moderation_state available to field queries": "patches/3025164-make-moderation-state-available-to-field-queries.patch",
                "3229493 - TextareaWidget::errorElement() does not consult violation property path.": "patches/3229493-textarea-does-not-consult-violation-property-path.patch",
                "3027240 - Undefined index: #parents FormState.php": "patches/3027240-form-system-undefined-index.patch",
                "2915792 - MenuLinkContentAccessControlHandler does not allow \"view\" access without admin permission": "patches/2915792-drupal-core-menu-link-perm-mr-339.patch",
                "2421445 - Text format wrapper does not take description_display into account": "patches/2421445-text-format-wrapper-does-not-take-description-display-into-account.patch",
                "Internal Claro tweaks": "patches/VACMS-16018-claro-css-tweaks.patch",
                "2767243 - Create a theme suggestion for taxonomy terms by view mode": "patches/2767243-core-theme-suggestion-for-taxonomy-view-modes.patch",
                "2775665 - MenuLinkContent updateLink function generates a PHP Warning for override-able keys that are not present in the loaded entity": "patches/2775665-menulinkcontent-updatelink-function-generates-misleading-php-warning.patch",
                "Claro claro_preprocess_input()": "patches/VACMS-12054-drupal-core-claro-preprocess-input.patch",
                "1156338 - Fixed maximum number of field values, but use «add more» similar to when cardinality «unlimited» is used": "patches/1156338-fixed-maximum-number-of-field-values.patch",
                "2942404 - Contentinfo landmark": "patches/2942404-contentinfo-landmark.patch",
                "3106205 - Length of menu_tree.url and menu_tree.route_param_key are too short (255 characters)": "patches/3106205-length-menu-tree-too-short.patch",
                "3333401 - Pager h4 cause accessibility flag on many pages": "patches/3333401-configurable-pager-heading-default-h2.patch",
                "3382759 - Add multiple workflow content moderation filter to Views.": "patches/3382759-add-multiple-workflow-content-moderation-filter-to-views.patch",
                "3241295 - CKEditor 5 isn't respecting field widgets row settings": "patches/3241295-ckeditor-5-not-respecting-field-widgets-row-settings.patch",
                "3376267 - [upstream] Add style to anchor leads to unusable behavior": "patches/3376267-add-style-to-anchor-leads-to-unusable-behavior.patch",
                "3285657 - The content has either been modified by another user, or you have already submitted modifications error": "patches/3285657-node-lock-translations.patch",
                "VACMS-19177 remove username form logging in user module": "patches/VACMS-19177-patch-for-user-module-to-log-uid.patch",
                "3082011 - Fix for orphaned label tags": "patches/3082011-19-do-not-use-label-HTML-tag-in-item-form-element.patch",
                "3397718 - 'To log in to this site, your browser must accept cookies from the domain' error message displayed when user goes back and reload the page": "patches/3397718-must-accept-cookies.patch"
            },
            "drupal/decoupled_router": {
                "3111456 - Unable to resolve path on node in other language than default": "patches/3111456-resolve-language-issue.patch"
            },
            "drupal/diff": {
                "3228798 - Make revisions overview page accessible": "patches/3228798-make-revisions-overview-page-accessible.patch",
                "2834253 - Missing column headings in Revisions list": "patches/2834253-missing-column-headers.patch"
            },
            "drupal/entity_browser": {
                "2856138 - Entity browser cardinality validation": "patches/2856138-entity-browser-cardinality-validation.patch",
                "3191302 - Make modal iframe tab accessible": "patches/3191302-make-modal-iframe-tab-accessible.patch",
                "3483265 - Make it possible to show latest revision in form widget": "patches/3483265-make-it-possible-to-show-latest-revision-in-fomr-widget.patch"
            },
            "drupal/entity_browser_table": {
                "3194622 - Custom field validation should not be applied to remove button": "patches/3794622-limit-remove-button-validators.patch",
                "3408217 - Error: Call to a member function getStorage() on null": "patches/3408217-error-call-to-member-function-getstorage-on-null.patch"
            },
            "drupal/entity_clone": {
                "3112577 - Cloning child references to nodes has potential to cause memory resource issues": "patches/3112577-entity-clone-child-node-system-drain.patch"
            },
            "drupal/entity_diff_ui": {
                "3406627 - Duplicated Block Revisions tabs": "patches/3406627-duplicate-blocks-revisions-tabs.patch"
            },
            "drupal/entity_reference_hierarchy": {
                "3219011 - reference fields are shown twice when ERwH is installed": "patches/3219011-ERwH-removes-preconfigured-fields.patch"
            },
            "drupal/entity_reference_revisions": {
                "2984027 - Incorrect manipulation of default revision flag": "patches/2984027-incorrect-manipulation-of-default-revision-flag.patch"
            },
            "drupal/entity_usage_addons": {
                "3000184 - In detailed usage, resolve the paragraph URL to parent entity": "patches/3000184-resolve-the-paragraph-URL-to-parent-entity.patch",
                "3443270 - Check Access entity usage statistics perms in linkedUsage() method": "patches/3443270-check-access-entity-usage-statistics-perms-in-linked-usage-method.patch"
            },
            "drupal/environment_indicator": {
                "Local to our setup - fgColor not being picked up.": "patches/VACMS-20126-fix-for-change-in-class-for-toolbar.patch"
            },
            "drupal/externalauth": {
                "VACMS-19177 remove usernmae from logging": "patches/VACMS-19177-removing-username-from-logging-for-externalauth.patch"
            },
            "drupal/field_group": {
                "2787179 - Visibility of invalid fields": "patches/2787179-highlight-html5-validation.patch",
                "3053242 - Undefined index #description_display when adding a description to fieldset group type": "patches/3053242-field-group-undefined-index-description-display.patch"
            },
            "drupal/flag": {
                "2893259 - Flags with VBO 8.x-4.x Patch 40": "patches/2893259-flag-vbo.patch"
            },
            "drupal/flysystem_s3": {
                "3297257 - Automated Drupal 10 compatibility fixes": "patches/3297257-drupal-10-compatibility-fixes.patch"
            },
            "drupal/html_tag_usage": {
                "3270450 - Add csv generator and filters": "patches/3270450-add-filters-and-csv.patch"
            },
            "drupal/inline_entity_form": {
                "3226473 - Opt-in system delete.": "patches/3226473-opt-in-system-delete.patch",
                "3061620 - Cancel closes all forms": "patches/3067620-inline-entity-form-close-only-forms-where-close-clicked.patch"
            },
            "drupal/jsonapi_extras": {
                "3025283 - Default field enhancer for each field type": "patches/3025283-field-type-enhancer.patch"
            },
            "drupal/linkit": {
                "3049946 - Linkit unpublished nodes not included": "patches/3049946-linkit-unpublished-nodes-not-included.patch"
            },
            "drupal/memcache": {
                "3058121 - Use persistent connections": "patches/3058121-memcache-persistent-connections-memcached.patch"
            },
            "drupal/menu_item_extras": {
                "3210468 - The 'bundle' field is not always populated with the menu name": "patches/3210468-the-bundle-field-is-not-always-populated-with-the-menu-name.patch"
            },
            "drupal/migration_tools": {
                "3366789 - Create convert to boolean process plugin": "patches/3366789-add-convert-boolean-process.patch"
            },
            "drupal/openapi_jsonapi": {
                "3110109 - Support renamed resource types Part 1": "patches/3110109-support-renamed-resource-types-part-1.patch",
                "3110109 - Support renamed resource types Part 2": "patches/3110109-support-renamed-resource-types-part-2.patch",
                "3185778 - Fix TypeError: Cannot read property 'anyOf' of undefined": "patches/3185778-add-required-keyword.patch"
            },
            "drupal/openapi_ui_swagger": {
                "3259746 - Add more UI config defaults": "patches/3259746-add-more-config-defaults.patch"
            },
            "drupal/paragraphs": {
                "3138609 - Fix broken fieldsets on forms": "patches/3138609-fix-broken-fieldsets-on-forms.patch",
                "2919186 - Remove button should not be shown on required field": "patches/2919186-hide-field-required-paragraphs-remove-botton.patch"
            },
            "drupal/pathauto": {
                "3204586 - Update URL Alias action is only available for nodes + users and does not work with views_bulk_operations": "patches/3204586-pathauto-vbo-support.patch",
                "3214658 - Omit nolink items from url path args and add token that uses parent url": "patches/3214658-remove-nolink-args-use-parent-entity-url.patch"
            },
            "drupal/prometheus_exporter": {
                "3214628 - Add published/unpublished node statistics to NodeCount.": "patches/3214628-prometheus-exporter-add-status-metrics-to-node-count.patch"
            },
            "drupal/raven": {
                "Sentry/Dsn throws a TypeError, blowing up everything.": "patches/VACMS-0000-PR-11436-raven-catch-typeerror.patch"
            },
            "drupal/redirect_options": {
                "3335893 - form_alter hook check on classes fails in some cases": "patches/3335893-redirect-options-form-alter-array-check.patch"
            },
            "drupal/simplesamlphp_auth": {
                "VAMCS-19923: add PIV card logging": "patches/VACMS-19923-simplesaml-attributes-error-logging.patch",
                "3127628 - Successful login with IDP but the user is still considered as anonymous": "patches/3127628-simplesamlphp-auth-fix-redirection-issue.patch"
            },
            "drupal/social_media_links": {
                "3044002 - Platform Name and Aria Label issue": "patches/3044002-platform-name-and-aria-label-issue.patch"
            },
            "drupal/subrequests": {
                "63049395 - Get same results on different request": "patches/63049395-change-request-type.patch"
            },
            "drupal/smart_date": {
                "3260965 - Undefined index: #value": "patches/3260965-smart-date-undefined-value-in-validation.patch",
                "3385720 - Implement errorElement() in Widgets": "patches/3385720-smart-date-implement-errorelement.patch"
            },
            "drupal/tablefield": {
                "3100109 - 0 string value in cell throws empty error": "patches/3100109-0-value-throwing-empty-error.patch",
                "3163841 - Fix Undefined index: caption notice": "patches/3163841-tablefield-empty-caption-notice.patch",
                "3176982 - Tablefield input elements have no title or label": "patches/3176982-tablefield-add-title-to-input-elements.patch",
                "3195203 - Copying caption to value breaks some data exports 3195203": "patches/3195203-tablefield-caption-copied-to-value.patch",
                "3341971 - Drag & drop addition adds meaningless numbers to table data, could break integrating code": "patches/3341971-tablefield-disable-drag-drop-controls.patch"
            },
            "drupal/taxonomy_entity_index" : {
                "3504104 - Support for excluding field names in views argument": "patches/3504104-support-for-excluding-field-names-4.patch"
            },
            "drupal/textfield_counter": {
                "3380997 - Textarea with summary and counter doesn't respect count only setting": "patches/3380997-fix-textfield-counter-respect-count-only-mode.patch"
            },
            "drupal/token": {
                "3047568 - Consistent tokens support across all entities and fields": "patches/3047568-token-consistent-entity-and-field-support.patch"
            },
            "drupal/viewfield": {
                "3252356 - Add option to display default view on node edit when always use default value selected": "patches/3252356-viewfield-option-display-default-view-on-node-edit.patch"
            },
            "drupal/views_bulk_edit": {
                "3024419 - Fix Required fields to really not be required": "patches/3024419-views-bulk-edit-fix-required-fields.patch"
            },
            "drupal/views_bulk_operations": {
                "3246212 - When access is denied, display the reason": "patches/3246212-display-access-denied-reason.patch"
            },
            "drupal/views_data_export": {
                "3189135 - Use relative URL for export button": "patches/3189135-use-relative-url-for-export.patch"
            }
        }
    },
    "scripts-descriptions": {
        "drush": "Run Drush transparently (all arguments will be passed).",
        "npm": "Run NPM transparently (all arguments will be passed).",
        "nuke": "Remove all Composer package and cache directories.",
        "set-path": "Display a command for updating the path to include `./bin`.",
        "va:drush": "Run Drush transparently (all arguments will be passed).",
        "va:npm": "Run NPM transparently (all arguments will be passed).",
        "va:nuke": "Remove all Composer package and cache directories.",
        "va:phpcbf": "Run PHP Code Beautifier and Fixer transparently (all arguments will be passed).",
        "va:set-path": "Display a command for updating the path to include `./bin`.",
        "va:ds:drupal": "Build the Drupal theme.",
        "va:ds:storybook": "Build the Storybook.",
        "va:migrate:sync": "Copy migration ymls from va_gov_migrate to config/sync and run config import.",
        "va:proxy:socks": "Set up a SOCKS proxy.",
        "va:proxy:socks:test": "Test whether the SOCKS proxy is operating correctly.",
        "va:test": "Run all of the tests sequentially, stopping on the first failure.",
        "va:test:no-fail": "Run all of the tests sequentially, even if some fail.",
        "va:test:fast": "Runs the \"fast\" static analysis, linting, and unit tests.",
        "va:test:check-cer": "Check the Corresponding Entity References fields.",
        "va:test:check-node-revision-logs": "Check the node revision log fields.",
        "va:test:check-taxonomy-revision-logs": "Check the taxonomy revision log fields.",
        "va:test:content-build-gql": "Run GraphQL export to test content-build.",
        "va:test:cypress": "Run Cypress tests.",
        "va:test:cypress-ci": "Run Cypress tests with CI-specific functionality.",
        "va:test:cypress-interactive": "Run Cypress tests interactively (on host web browser).",
        "va:test:cypress-parallel": "Run Cypress tests in parallel.",
        "va:test:eslint": "Run ESLint tests.",
        "va:test:lint-php": "Lint PHP files.",
        "va:test:scaling_performance": "Perform a test of the CMS' ability to scale.",
        "va:test:php_codesniffer": "Run PHP_CodeSniffer tests.",
        "va:test:phpstan": "Run PHPStan static analysis tests.",
        "va:test:phpunit-functional": "Run PHPUnit (functional) tests.",
        "va:test:phpunit-unit": "Run PHPUnit (unit) tests.",
        "va:test:status-error": "Check Drupal status for errors.",
        "va:test:status-error-ci": "Check Drupal status for errors with some CI-specific functionality.",
        "va:test:stylelint-modules": "Run StyleLint tests on modules.",
        "va:test:stylelint-themes": "Run StyleLint tests on themes.",
        "va:theme:compile": "Compile the VA.gov Claro theme.",
        "va:theme:watch": "Watch VA.gov Claro theme source and compile as needed.",
        "va:web:build": "Perform a content build.",
        "va:web:install": "Prepare the content-build project.",
        "va:web:prepare-dotenv": "Prepare the ./web/.env file.",
        "va:next:install": "Prepare the next-build project",
        "va:next:build": "Build the next-build server for preview",
        "va:next:start": "Start the next-build server for preview"
    },
    "scripts": {
        "pre-install-cmd": [
            "! ./scripts/should-run-directly.sh || ./scripts/composer-pre-install.sh",
            "./scripts/should-run-directly.sh || ddev composer run pre-install-cmd --"
        ],
        "post-install-cmd": [
            "! ./scripts/should-run-directly.sh || ./scripts/composer-post-install.sh",
            "./scripts/should-run-directly.sh || ddev composer run post-install-cmd --"
        ],
        "pre-update-cmd": [
            "! ./scripts/should-run-directly.sh || ./scripts/composer-pre-update.sh",
            "./scripts/should-run-directly.sh || ddev composer run pre-update-cmd --"
        ],
        "post-update-cmd": [
            "! ./scripts/should-run-directly.sh || ./scripts/composer-post-update.sh",
            "./scripts/should-run-directly.sh || ddev composer run post-update-cmd --"
        ],
        "drush": "composer va:drush --",
        "npm": "composer va:npm --",
        "nuke": "composer va:nuke --",
        "set-path": "composer va:set-path --",
        "va:drush": [
            "# Run Drush transparently (all arguments will be passed).",
            "! ./scripts/should-run-directly.sh || drush",
            "./scripts/should-run-directly.sh || ddev composer va:drush --"
        ],
        "va:ds:drupal": [
            "# Build the Drupal theme.",
            "! ./scripts/should-run-directly.sh || (cd docroot/design-system && nvm use && npm install && npm run build:drupal)",
            "./scripts/should-run-directly.sh || ddev composer va:ds:drupal --"
        ],
        "va:ds:storybook": [
            "# Build the Storybook.",
            "! ./scripts/should-run-directly.sh || (cd docroot/design-system && nvm use && npm install && npm run build:storybook)",
            "./scripts/should-run-directly.sh || ddev composer va:ds:storybook --"
        ],
        "va:migrate:sync": [
            "# Copy migration ymls from va_gov_migrate to config/sync and run config import.",
            "! ./scripts/should-run-directly.sh || ./scripts/migrate-sync.sh",
            "./scripts/should-run-directly.sh || ddev composer va:migrate:sync --"
        ],
        "va:npm": [
            "# Run NPM transparently (all arguments will be passed).",
            "! ./scripts/should-run-directly.sh || npm",
            "./scripts/should-run-directly.sh || ddev composer va:npm --"
        ],
        "va:nuke": [
            "# Remove all Composer package and cache directories.",
            "! ./scripts/should-run-directly.sh || ./scripts/nuke-composer-directories.sh",
            "./scripts/should-run-directly.sh || ddev composer va:nuke --"
        ],
        "va:phpcbf": [
            "# Run PHP Code Beautifier and Fixer transparently (all arguments will be passed).",
            "! ./scripts/should-run-directly.sh || bin/phpcbf -p --",
            "./scripts/should-run-directly.sh || ddev composer va:phpcbf --"
        ],
        "va:proxy:socks": [
            "# Set up a SOCKS proxy.",
            "./scripts/connect-socks.sh"
        ],
        "va:proxy:socks:test": [
            "# Test the SOCKS proxy.",
            "curl -v --proxy socks5h://127.0.0.1:2001 sentry.vetsgov-internal"
        ],
        "va:set-path": [
            "# Run the command output below to set your current terminal PATH variable.",
            "# This will allow you to run any command in the ./bin directory without a path.",
            "echo \"export PATH=${PATH}\""
        ],
        "va:test": [
            "# Run all of the tests sequentially, stopping on the first failure.",
            "@composer validate",
            "@va:test:check-cer",
            "@va:test:check-node-revision-logs",
            "@va:test:check-taxonomy-revision-logs",
            "@va:test:content-build-gql",
            "@va:test:cypress",
            "@va:test:eslint",
            "@va:test:lint-php",
            "@va:test:php_codesniffer",
            "@va:test:phpstan",
            "@va:test:phpunit-functional",
            "@va:test:phpunit-unit",
            "@va:test:status-error",
            "@va:test:stylelint-modules",
            "@va:test:stylelint-themes"
        ],
        "va:test:fast": [
            "# Runs the \"fast\" static analysis, linting, and unit tests.",
            "@composer validate",
            "@va:test:check-cer",
            "@va:test:check-node-revision-logs",
            "@va:test:check-taxonomy-revision-logs",
            "@va:test:eslint",
            "@va:test:lint-php",
            "@va:test:php_codesniffer",
            "@va:test:phpstan",
            "@va:test:phpunit-unit",
            "@va:test:stylelint-modules",
            "@va:test:stylelint-themes"
        ],
        "va:test:no-fail": [
            "# Run all of the tests sequentially, even if some fail.",
            "@composer validate || true",
            "@va:test:check-cer || true",
            "@va:test:check-node-revision-logs || true",
            "@va:test:check-taxonomy-revision-logs || true",
            "@va:test:content-build-gql || true",
            "@va:test:cypress || true",
            "@va:test:eslint || true",
            "@va:test:lint-php || true",
            "@va:test:php_codesniffer || true",
            "@va:test:phpstan || true",
            "@va:test:phpunit-functional || true",
            "@va:test:phpunit-unit || true",
            "@va:test:status-error || true",
            "@va:test:stylelint-modules || true",
            "@va:test:stylelint-themes || true"
        ],
        "va:test:check-cer": [
            "# Check the Corresponding Entity References fields.",
            "! ./scripts/should-run-directly.sh || ./tests/scripts/check-cer.sh",
            "./scripts/should-run-directly.sh || ddev composer va:test:check-cer --"
        ],
        "va:test:check-node-revision-logs": [
            "# Check the node revision log fields.",
            "! ./scripts/should-run-directly.sh || ./tests/scripts/check-node-revision-logs.sh",
            "./scripts/should-run-directly.sh || ddev composer va:test:check-node-revision-logs --"
        ],
        "va:test:check-taxonomy-revision-logs": [
            "# Check the taxonomy revision log fields.",
            "! ./scripts/should-run-directly.sh || ./tests/scripts/check-taxonomy-revision-logs.sh",
            "./scripts/should-run-directly.sh || ddev composer va:test:check-taxonomy-revision-logs --"
        ],
        "va:test:content-build-gql": [
            "# Run GraphQL export to test content-build.",
            "! ./scripts/should-run-directly.sh || ./tests/scripts/content-build-gql.sh",
            "./scripts/should-run-directly.sh || ddev composer va:test:content-build-gql --"
        ],
        "va:test:cypress": [
            "# Run Cypress tests.",
            "! ./scripts/should-run-directly.sh || ./tests/scripts/cypress-tests.sh",
            "./scripts/should-run-directly.sh || ddev composer va:test:cypress --"
        ],
        "va:test:cypress-ci": [
            "# Run Cypress tests with CI-specific functionality.",
            "! ./scripts/should-run-directly.sh || ./tests/scripts/cypress-ci-tests.sh",
            "./scripts/should-run-directly.sh || ddev composer va:test:cypress-ci --"
        ],
        "va:test:cypress-interactive": [
            "# Run Cypress tests interactively (on host web browser).",
            "! ./scripts/should-run-directly.sh || echo 'This command should only be run from a local development machine.'",
            "./scripts/should-run-directly.sh || npm run test:cypress:interactive --"
        ],
        "va:test:cypress-parallel": [
            "# Run Cypress tests interactively (on host web browser).",
            "! ./scripts/should-run-directly.sh || ./tests/scripts/cypress-parallel-tests.sh",
            "./scripts/should-run-directly.sh || ddev composer va:test:cypress-parallel --"
        ],
        "va:test:eslint": [
            "# Run ESLint tests.",
            "! ./scripts/should-run-directly.sh || npm run eslint --",
            "./scripts/should-run-directly.sh || ddev composer va:test:eslint --"
        ],
        "va:test:lint-php": [
            "# Lint PHP files.",
            "! ./scripts/should-run-directly.sh || ./tests/scripts/lint-php.sh",
            "./scripts/should-run-directly.sh || ddev composer va:test:lint-php --"
        ],
        "va:test:scaling_performance": [
            "# Run PHP_CodeSniffer tests.",
            "! ./scripts/should-run-directly.sh || php tests/scaling_performance.php",
            "./scripts/should-run-directly.sh || ddev composer va:test:scaling_performance --"
        ],
        "va:test:php_codesniffer": [
            "# Run PHP_CodeSniffer tests.",
            "! ./scripts/should-run-directly.sh || phpcs --colors --",
            "./scripts/should-run-directly.sh || ddev composer va:test:php_codesniffer --"
        ],
        "va:test:phpstan": [
            "# Run PHPStan static analysis tests.",
            "! ./scripts/should-run-directly.sh || bin/phpstan analyze --memory-limit=1G --",
            "./scripts/should-run-directly.sh || ddev composer va:test:phpstan --"
        ],
        "va:test:phpunit-functional": [
            "# Run PHPUnit (functional) tests.",
            "! ./scripts/should-run-directly.sh || bin/phpunit --group functional --exclude-group disabled tests/phpunit --",
            "./scripts/should-run-directly.sh || ddev composer va:test:phpunit-functional --"
        ],
        "va:test:phpunit-unit": [
            "# Run PHPUnit (unit) tests.",
            "! ./scripts/should-run-directly.sh || bin/phpunit --group unit --exclude-group disabled tests/phpunit --",
            "./scripts/should-run-directly.sh || ddev composer va:test:phpunit-unit --"
        ],
        "va:test:phpunit-coverage": [
            "# Run PHPUnit (unit) tests.",
            "! ./scripts/should-run-directly.sh || ./tests/scripts/phpunit-coverage.sh",
            "./scripts/should-run-directly.sh || ddev composer va:test:phpunit-coverage --"
        ],
        "va:test:status-error": [
            "# Check Drupal status for errors.",
            "! ./scripts/should-run-directly.sh || ./tests/scripts/status-error.sh",
            "./scripts/should-run-directly.sh || ddev composer va:test:status-error --"
        ],
        "va:test:status-error-ci": [
            "# Check Drupal status for errors with some CI-specific functionality.",
            "! ./scripts/should-run-directly.sh || ./tests/scripts/status-error-ci.sh",
            "./scripts/should-run-directly.sh || ddev composer va:test:status-error-ci --"
        ],
        "va:test:stylelint-modules": [
            "# Run StyleLint tests on modules.",
            "! ./scripts/should-run-directly.sh || npm run stylelint-modules --",
            "./scripts/should-run-directly.sh || ddev composer va:test:stylelint-modules --"
        ],
        "va:test:stylelint-themes": [
            "# Run StyleLint tests on themes.",
            "! ./scripts/should-run-directly.sh || npm run stylelint-themes --",
            "./scripts/should-run-directly.sh || ddev composer va:test:stylelint-themes --"
        ],
        "va:theme:compile": [
            "# Compile the VA.gov Claro theme.",
            "! ./scripts/should-run-directly.sh || ./scripts/compile-theme.sh",
            "./scripts/should-run-directly.sh || ddev composer va:theme:compile --"
        ],
        "va:theme:watch": [
            "# Watch VA.gov Claro theme source and compile as needed.",
            "! ./scripts/should-run-directly.sh || ( cd docroot/themes/custom/vagovclaro && npm run dev )",
            "./scripts/should-run-directly.sh || ddev composer va:theme:watch --"
        ],
        "va:web:build": [
            "# Perform a content build.",
            "Composer\\Config::disableProcessTimeout",
            "! ./scripts/should-run-directly.sh || ./scripts/web-build.sh",
            "./scripts/should-run-directly.sh || ddev composer va:web:build --"
        ],
        "va:web:install": [
            "# Prepare content-build project.",
            "! ./scripts/should-run-directly.sh || ./scripts/web-install.sh",
            "./scripts/should-run-directly.sh || ddev composer va:web:install --"
        ],
        "va:web:prepare-dotenv": [
            "# Prepare the ./web/.env file.",
            "! ./scripts/should-run-directly.sh || ./scripts/web-prepare-dotenv.sh",
            "./scripts/should-run-directly.sh || ddev composer va:web:prepare-dotenv --"
        ],
        "va:next:install": [
            "# Prepare the next build project",
            "! ./scripts/should-run-directly.sh || ./scripts/next-install.sh",
            "./scripts/should-run-directly.sh || ddev composer va:next:install --"
        ],
        "va:next:build": [
            "# Prepare the next build server",
            "! ./scripts/should-run-directly.sh || ./scripts/next-build.sh",
            "./scripts/should-run-directly.sh || ddev composer va:next:build --"
        ],
        "va:next:start": [
            "# Start the next build server",
            "! ./scripts/should-run-directly.sh || ./scripts/next-start.sh",
            "./scripts/should-run-directly.sh || ddev composer va:next:start --"
        ]
    }
}
