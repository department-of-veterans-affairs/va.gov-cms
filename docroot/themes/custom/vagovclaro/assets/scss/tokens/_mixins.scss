@mixin va-buttons {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  border: 0;
  border-radius: 5px;
  color: var(--color-white);
  display: inline-block;
  font-family: var(--font-family-sans);
  font-size: 1em;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 600;
  line-height: 1;
  margin-bottom: 0.5em;
  margin-right: 0.5em;
  margin-top: 0.5em;
  padding: 10px 20px;
  text-align: center;
  text-decoration: none;
  width: auto;
}

@mixin wysiwyg-va-action-links {
  &::before {
    //    content: '\F138'; hide until FA support added
    display: inline-block;
    font-family: 'Font Awesome 5 Free';
    font-size: 175%;
    font-weight: 900;
    height: 0;
    padding-right: 1rem;
    transform: translateY(5px);
    vertical-align: -4px; //needed until FA support added
    width: 30px; //needed until FA support added
  }
  
  font-weight: 700;
  padding: 8px 0;  
}

@mixin wysiwyg-va-body-font {
  font-family: 'Source Sans Pro', sans-serif;
  font-size: 16px;
  line-height: 1.5;
  margin-bottom: 1em;
}

@mixin va-body-font {
  font-family: var(--font-family-sans);
  font-size: 16px;
  line-height: 1.5;
  margin-bottom: 1em;
}

/*
 A small subset of Formation for html tags enabled in rich text editor used in
 wysiwyg editor and node views.
 */

@mixin va-basic-styling {
  .field__item {
    @include va-body-font;

    /* Reset field labels for nested fields */
    .field__label {
      font-size: 81.3%;
      text-transform: uppercase;
    }
  }

  h2,
  h3,
  h4,
  h5,
  h6 {
    font-family: var(--font-family-serif);
    font-weight: 600;
    line-height: 1.3;
    margin-bottom: 0.5em;
  }

  h2 {
    font-size: 1.6rem;
  }

  h3 {
    font-size: 1.2rem;
  }

  h4 {
    font-size: 1rem;
  }


  /* Lists */

  ol {
    list-style-position: outside;
    margin: 0 0 0 1.25em;
    padding: 0;
  }

  ul {
    list-style: square;
    list-style-position: outside;
    margin: 0 0 0 1.25em;
    padding: 0;
  }

  li {
    line-height: 1.5;
    margin-bottom: 0.5em;
  }


  /* Links */

  a,
  a:hover {
    color: var(--va-blue-dark);
    text-decoration: underline;
    transition-duration: 0.3s;
    transition-property: color,background-color,border-color;
    transition-timing-function: ease-in-out;
  }

  a:hover {
    background-color: rgba(0, 0, 0, 0.05);
    color: inherit;
  }

  .field--type-text-long,
  .field--type-string-long {
    max-width: 700px;
  }


  /* Block styles */

  .va-address-block {
    border-left: 3px solid var(--va-blue-med);
    margin-left: 5rem;
    padding-left: 1rem;
  }


  /* Buttons */
  a.usa-button,
  a.usa-button-primary,
  a.va-button-primary,
  a.usa-secondary-button {
    @include va-buttons;

    &:hover {
      color: var(--color-white);
      text-decoration: none;
    }
  }


  /* Default button (blue) */
  .usa-button,
  .usa-button-primary {
    @include va-buttons;
    background-color: var(--va-blue-med);

    &:hover {
      background-color: var(--va-blue-darker);
    }
  }


  /* Primary button (green) */
  .va-button-primary {
    @include va-buttons;
    background: var(--va-green);

    &:hover {
      background: var(--va-green-dark);
    }
  }


  /* Secondary button (blue 'ghost') */
  a.usa-button-secondary {
    @include va-buttons;
    background: transparent;
    box-shadow: inset 0 0 0 2px var(--va-blue-med);
    color: var(--va-blue-med);

    &:hover {
      background: transparent;
      box-shadow: inset 0 0 0 2px var(--va-blue-darker);
      color: var(--va-blue-darker)3;
    }
  }
  
  /*Action links*/
  a.vads-c-action-link--blue,
  a.vads-c-action-link--green,
  a.vads-c-action-link--white {
    @include wysiwyg-va-action-links;
  }
  
  a.vads-c-action-link--green {
    &::before {
      //      color: #2e8540; hide until FA support added
      content: url('/themes/custom/vagovclaro/images/icons/2e8540/chevron-circle-right-solid.svg') //needed until FA support added
    }
  }
  
  a.vads-c-action-link--blue {
    &::before {
      //      color: #004795; hide until FA support added
      content: url('/themes/custom/vagovclaro/images/icons/004795/chevron-circle-right-solid.svg') //needed until FA support added
    }
  }
  
  a.vads-c-action-link--white {
    &::before {
      color: #fff;
      transition-duration: 0.3s;
      transition-property: color,
        background-color,
        border-color;
      transition-timing-function: ease-in-out;
    }
    
    color: #fff;
    
    &:hover {
      background-color: transparent;
      color: #f9c642;
      
      &::before {
        color: #f9c642;
      }
    }
  }
}

@mixin intro-text {
  font-family: var(--font-family-serif);
  font-size: 1.25rem;
  font-weight: 400;
  line-height: 2rem;
  margin: 0;
}

// consistent styles for icons in alerts
@mixin alert-icon($url) {
  position: relative;

  &::before {
    background-image: url($url);
    background-size: contain;
    content: '';
    display: inline-block;
    height: var(--space-m);
    left: var(--space-l);
    margin-top: calc(var(--space-m)/-2);
    position: absolute;
    text-align: center;
    top: 50%;
    width: var(--space-m);
  }
}

// placeholder map until design tokens are defined... breakpoint values likely to change
$breakpoints: (
  'sm': 767px,
  'md': 992px,
  'lg': 1200px,
  'xl': 1440px,
  'tabs': 48em // see: docroot/core/themes/claro/css/components/tabs.css line 203.
);

@mixin breakpoint($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media screen and (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }
  @else {
    @warn 'No breakpoint with name `#{$breakpoint}`. '
      + 'Available breakpoints are: #{map-keys($breakpoints)}.';
  }
}
