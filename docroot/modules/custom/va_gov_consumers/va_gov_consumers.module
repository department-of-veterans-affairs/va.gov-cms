<?php

/**
 * @file
 * Contains va_gov_consumers.module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Block\BlockPluginInterface;
use Drupal\va_gov_consumers\GithubConsumer;

/**
 * Implements hook_block_view_alter().
 *
 * Used for grabbing help markup from github.
 */
function va_gov_consumers_block_view_alter(array &$build, BlockPluginInterface $block) {
  if ($block->getBaseId() === 'system_main_block') {
    $current_uri = \Drupal::request()->getRequestUri();
    // Make sure we are on the help page.
    if ($current_uri === '/training-guide') {
      $build['#pre_render'][] = '_va_gov_consumers_content';
    }
  }
}

/**
 * Callback for block view alter.
 */
function _va_gov_consumers_content() {
  $consumer = new GithubConsumer();
  $source = 'https://raw.githubusercontent.com/department-of-veterans-affairs/drupal-helpdesk-training/master/manual.md?token=AASLBQ7CMWQ33JRV2LN77JS4ZGSBY';
  $attribution = 'https://github.com/department-of-veterans-affairs/drupal-helpdesk-training';
  return $consumer->contentRender($source, $attribution);
}

/**
 * Implements hook_form_alter().
 */
function va_gov_consumers_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  _vagov_consumers_disable_vha_api_form_fields($form, $form_id);
  _vagov_consumers_disable_non_vha_facilities_api_form_fields($form, $form_id);
}

/**
 * Callback for table field widget.
 *
 * @param object $element
 *   The field object.
 */
function _va_gov_consumers_customize_table($element) {
  unset($element['tablefield']['import']);
  unset($element['tablefield']['rebuild']);
  return $element;
}

/**
 * Disable api sourced fields on vha local facility to prevent human editing.
 *
 * @param array $form
 *   A drupal form array by reference.
 * @param string $form_id
 *   The machine name for the form.
 */
function _vagov_consumers_disable_vha_api_form_fields(array &$form, $form_id) {
  if ($form_id === 'node_health_care_local_facility_edit_form' || $form_id === 'node_health_care_local_facility_form') {
    if (empty($form['title']['widget'][0]['value']['#default_value'])) {
      $form['title']['widget'][0]['value']['#default_value'] = t('API Data');
    }

    // Disable the facility locator API field if it is populated because it
    // should not be altered, or it will deviate from the API.
    if (!empty($form['field_facility_locator_api_id']['widget'][0]['value']['#default_value'])) {
      $form['field_facility_locator_api_id']['widget'][0]['value']['#attributes']['disabled'] = TRUE;
      $form['field_facility_locator_api_id']['widget'][0]['value']['#description'] = t('Synced to the Facility API.  If you need to change this, please contact CMS Support.');
    }
    // Disable items that are populated by the Facility API migration.
    $form['title']['widget'][0]['value']['#attributes']['disabled'] = TRUE;
    $form['field_facility_classification']['widget']['#attributes']['disabled'] = TRUE;
    unset($form['field_facility_hours']['widget'][0]['caption']);
    $form['field_facility_hours']['widget'][0]['#addrow'] = FALSE;
    $form['field_facility_hours']['widget'][0]['#attributes']['disabled'] = TRUE;
    $form['field_phone_number']['widget'][0]['value']['#attributes']['disabled'] = TRUE;
    $form['field_mental_health_phone']['widget'][0]['value']['#attributes']['disabled'] = TRUE;

    // Special handling for the address field widget.
    $form['field_address']['widget']['#disabled'] = TRUE;
    // Special handling for the table field widget.
    $form['field_facility_hours']['widget'][0]['#after_build'][] = '_va_gov_consumers_customize_table';
  }
}

/**
 * Disable api sourced fields on non vha facilities to prevent human editing.
 *
 * @param array $form
 *   A drupal form array by reference.
 * @param string $form_id
 *   The machine name for the form.
 */
function _vagov_consumers_disable_non_vha_facilities_api_form_fields(array &$form, $form_id) {
  $target_forms = [
    'node_nca_facility_edit_form',
    'node_nca_facility_form',
    'node_vba_facility_edit_form',
    'node_vba_facility_form',
    'node_vet_center_edit_form',
    'node_vet_center_form',
  ];

  if (in_array($form_id, $target_forms)) {
    if (empty($form['title']['widget'][0]['value']['#default_value'])) {
      // Prepoulate the title to warn it will be overwritten by api data.
      $form['title']['widget'][0]['value']['#default_value'] = t('May be overwritten by Facility API Data');
    }
    else {
      // Disable the title, it has content already.
      $form['title']['widget'][0]['value']['#attributes']['disabled'] = TRUE;
    }
    // Disable the facility locator API field if it is populated because it
    // should not be altered, or it will deviate from the API.
    if (!empty($form['field_facility_locator_api_id']['widget'][0]['value']['#default_value'])) {
      $form['field_facility_locator_api_id']['widget'][0]['value']['#attributes']['disabled'] = TRUE;
      $form['field_facility_locator_api_id']['widget'][0]['value']['#description'] = t('Synced to the Facility API.  If you need to change this, please contact CMS Support.');
    }
  }
}
