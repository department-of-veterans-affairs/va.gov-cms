<?php

/**
 * @file
 * Contains va_gov_facilities.module.
 */

use Drupal\Core\Entity\EntityFormInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * @file
 * Contains va_gov_facilities.module.
 */

/**
 * Implements hook_page_attachments().
 */
function va_gov_facilities_page_attachments(array &$attachments) {
  // Control visibility/required for facility status details.
  $attachments['#attached']['library'][] = 'va_gov_facilities/facility_status_details';
}

/**
 * Implements hook_form_alter().
 */
function va_gov_facilities_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  /** @var Drupal\Core\Entity\FieldableEntityInterface $entity */
  $formObject = $form_state->getFormObject();
  if ($formObject instanceof EntityFormInterface) {
    $entity = $formObject->getEntity();
    if (
      $entity->getEntityTypeId() === 'node'
      && in_array($entity->bundle(), ['health_care_local_health_service',
        'vha_facility_nonclinical_service',
      ])
    ) {
      $form['#attached']['library'][] = 'va_gov_facilities/use_facility_hours';
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function va_gov_facilities_preprocess_field__paragraph__field_hours(&$variables) {

  $item_list = $variables['element']['#items'];
  $paragraph = $item_list->getEntity();
  $field_name = "field_hours";
  // Equates to "Use facility's hours" choice.
  $target_value = "0";
  $bundles_referencing_content = [
    'health_care_local_health_service',
    'vha_facility_nonclinical_service',
  ];
  $node_parent = _va_gov_facilities_test_preprocess_show($paragraph, $field_name, $target_value, $bundles_referencing_content);
  if ($node_parent) {
    $related_field = "field_facility_location";
    $field_to_render = "field_office_hours";
    $variables['actual_hours'] = _va_gov_facilities_create_custom_variable($node_parent, $related_field, $field_to_render);
  }
}

/**
 * Tests to see if we should preprocess.
 *
 * @param object $test_object
 *   Node that we will be testing to see if we should preprocess.
 * @param string $field_name
 *   Name of the field to.
 * @param string $target_value
 *   Value we expect the field to be.
 * @param array $haystack_bundles
 *   Names of bundles to compare against the type of node we have.
 */
function _va_gov_facilities_test_preprocess_show($test_object, string $field_name, $target_value, array $haystack_bundles) {
  $field_value = $test_object->get($field_name)->value;
  if ($field_value === $target_value) {
    $node_parent = _vagovclaro_get_node_parent($test_object);
    $node_type = $node_parent->getType();
    if (in_array($node_type, $haystack_bundles)) {
      return $node_parent;
    }
    else {
      return FALSE;
    }
  }
}

/**
 * Creates custom array for render array.
 *
 * @param object $node
 *   Node.
 * @param string $related_field
 *   Field that relates our node to another.
 * @param string $field_to_render
 *   Field we want to render.
 */
function _va_gov_facilities_create_custom_variable($node, $related_field, $field_to_render) {
  // @phpstan-ignore-next-line Test is unclear what get() we are using
  $referenced_node = $node->get($related_field)->referencedEntities();
  $node_entity = $referenced_node[0];
  $value = $node_entity->get($field_to_render);
  $output['#cache']['tags'] = $node_entity->getCacheTags();
  $viewBuilder = \Drupal::entityTypeManager()->getViewBuilder('node');
  $output = $viewBuilder->viewField($value, 'full');
  return $output;
}

/**
 * Implements hook_field_widget_widget_complete_form_alter().
 */
function va_gov_facilities_field_widget_complete_form_alter(&$field_widget_complete_form, FormStateInterface $form_state, $context) {
  /** @var \Drupal\field\Entity\FieldConfig $field_definition */
  $field_definition = $context['items']->getFieldDefinition();
  $paragraph_entity_reference_field_name = $field_definition->getName();
  if ($paragraph_entity_reference_field_name === "field_service_location") {
    if ($context['form']['#attributes']['class']['0'] === "node-health-care-local-health-service-edit-form") {
      $item_list = $context['items'];
      $node = $item_list->getEntity();
      $related_field = "field_facility_location";
      $field_to_render = "field_office_hours";
      $field_widget_complete_form['widget']['0']['subform']['field_hours']['facility_hours'] = _va_gov_facilities_create_custom_variable($node, $related_field, $field_to_render);
    }
  }
}
