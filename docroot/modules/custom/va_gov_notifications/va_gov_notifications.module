<?php

/**
 * @file
 * Primary module hooks for VA.gov Notifications module.
 */

use Drupal\Component\Utility\Html;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Sets up twig template fore Outdated Content notifications.
 */
function va_gov_notifications_theme() {
  return [
    'message__vamc_outdated_content__mail_body' => [
      'base hook' => 'message',
    ],
    'message__vet_center_outdated_content__mail_body' => [
      'base hook' => 'message',
    ],
  ];
}

/**
 * Implements hook_mail_alter().
 */
function va_gov_notifications_mail_alter(&$message) {
  $types = [
    'vamc_outdated_content',
    'vet_center_outdated_content',
  ];
  if (in_array($message['key'], $types) && !empty($message['params']['message_entity'])) {
    $message['headers']['Content-Type'] = 'multipart/related; charset=UTF-8; format=flowed; delsp=yes';
  }
}

/**
 * Implements hook_help().
 */
function va_gov_notifications_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.va_gov_notifications':
      $text = file_get_contents(__DIR__ . '/README.md');
      if (!\Drupal::moduleHandler()->moduleExists('markdown')) {
        return '<pre>' . Html::escape($text) . '</pre>';
      }
      else {
        // Use the Markdown filter to render the README.
        $filter_manager = \Drupal::service('plugin.manager.filter');
        $settings = \Drupal::configFactory()->get('markdown.settings')->getRawData();
        $config = ['settings' => $settings];
        $filter = $filter_manager->createInstance('markdown', $config);
        return $filter->process($text, 'en');
      }
  }
  return NULL;
}
