<?php

/**
 * @file
 * Adds support for returning static assets from the same URL.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\node\NodeInterface;
use Drupal\va_gov_build_trigger\Form\PreviewForm;

/**
 * Implements hook_help().
 */
function va_gov_preview_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.va_gov_preview':
      $output = '';
      $output .= '<h3>' . t('VA.gov Content Preview') . '</h3>';
      $output .= '<p>' . t('This module provides content previewing.') . '</p>';
      return $output;
  }
}

/**
 * Alter the result of \Drupal\next\Plugin\SitePreviewerInterface::render.
 *
 * This hook is called after the preview has been assembled.
 *
 * @param array &$preview
 *   The preview renderable array from the site_previewer.
 * @param array $context
 *   Context in which the entity is previewed with the following keys:
 *   - 'plugin': the site_previewer plugin.
 *   - 'entity': the entity in preview.
 *   - 'sites': the sites for this entity.
 *   - 'original_build': the original un-altered build.
 *
 * @ingroup next_api
 */
function va_gov_preview_next_site_preview_alter(array &$preview, array $context) {
  // Prevent drupal/next overwriting the existing node view content section.
  $preview['content'] = $context['original_build'][0]['content'];
  unset($preview[0]);
}

/**
 * Add va_gov preview button to view node on the front end.
 */
//function va_gov_preview_preprocess_page(&$variables) {
//
//  $node = \Drupal::routeMatch()->getParameter('node');
//  if ($node instanceof NodeInterface) {
//    $route_name = \Drupal::routeMatch()->getRouteName();
//    $language = \Drupal::languageManager()->getCurrentLanguage()->getId();
//
//    // Check feature flags for NB preview.
//    $next_build_preview = \Drupal::service('feature_toggle.feature_status')->getStatus('feature_next_story_preview');
//
//    // Gather content types that enable NB preview.
//    // Make sure we aren't on the node form or an excluded type.
//    if (($route_name !== 'entity.node.edit_form') && ($language === 'en')) {
//
//      // Set last saved info for all node view displays.
//      $last_saved_by_an_editor = $node->get('field_last_saved_by_an_editor')->value;
//      $variables['page']['last_saved_by_an_editor'] = $last_saved_by_an_editor ? \Drupal::service('date.formatter')->format($last_saved_by_an_editor, 'custom', 'F j Y g:ia') : 'Unknown';
//
//      // Use NB preview link for node preview button if enabled.
//      if ($next_build_preview && $node->bundle() === 'news_story') {
//
//        // Generate preview url for node here.
//        $url = 'https://testing';
//        $button = '<a class="button button--primary js-form-submit form-submit node-preview-button" rel="noopener" target="_blank" href="' . $url . '">Preview</a>';
//
//        $variables['page']['sidebar_second']['#markup'] = $button;
//      }
//      // Otherwise use existing preview button functionality.
//      else {
//        $exclusion_types_from_config = \Drupal::service('va_gov_backend.exclusion_types')->getExcludedTypes();
//        $list_types = [
//          // List pages don't play nicely with preview.
//          'event_listing',
//          'health_services_listing,',
//          'leadership_listing',
//          'locations_listing',
//          'press_releases_listing',
//          'publication_listing',
//          'story_listing',
//        ];
//        $exclusion_types = array_merge(array_values($exclusion_types_from_config), array_values($list_types));
//        // Exclude staff pages without bios.
//        if ($node->bundle() === 'person_profile' && $node->field_complete_biography_create->value === '0') {
//          $exclusion_types[] = 'person_profile';
//        }
//        if (!in_array($node->bundle(), $exclusion_types)) {
//          // Make sure we aren't on /training-guide.
//          $current_uri = \Drupal::request()->getRequestUri();
//          if ($current_uri !== '/training-guide') {
//            $node = \Drupal::routeMatch()->getParameter('node');
//            $nid = $node->id();
//            $host = \Drupal::request()->getHost();
//            $preview_form = new PreviewForm();
//            $url = $preview_form->getEnvironment($host, $nid);
//            $button = '<a class="button button--primary js-form-submit form-submit node-preview-button" rel="noopener" target="_blank" href="' . $url . '">Preview</a>';
//            $variables['page']['sidebar_second']['#markup'] = $button;
//          }
//        }
//      }
//    }
//  }
//}
