<?php

/**
 * @file
 * Contains va_gov_workflow.module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Entity\ContentEntityTypeInterface;

/**
 * Implements hook_help().
 */
function va_gov_workflow_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the va_gov_workflow module.
    case 'help.page.va_gov_workflow':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Provides customizations for publishing workflow.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Adds Validation to check for presence of revision log message.
 *
 * @param array $form
 *   The exposed widget form array.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   The form state.
 */
function _va_gov_workflow_validate_required_revision_message(array $form, FormStateInterface &$form_state) {
  // Add revision log validation.
  if ($form_state->isValueEmpty(['revision_log', '0', 'value'])) {
    $form_state->setErrorByName('revision_log][0][value', t('Revision log message is required'));
  }
}

/**
 * Implements hook_entity_base_field_info_alter().
 *
 * {@inheritdoc}
 */
function va_gov_workflow_entity_base_field_info_alter(&$fields, ContentEntityTypeInterface $entity_type) {
  // Display the revision_log_message field.
  if ($entity_type->id() == 'taxonomy_term' && isset($fields['revision_log_message'])) {
    // Grab the existing options so we don't stomp them without intent.
    $form_options = $fields['revision_log_message']->getDisplayOptions('form');
    // For some reason the field defaults to region = hidden.
    $form_options['region'] = 'content';
    $fields['revision_log_message']
      ->setRequired(TRUE)
      ->setDisplayOptions('form', $form_options);
  }
}
