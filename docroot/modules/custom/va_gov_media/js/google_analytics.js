/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/
(function vaGovMediaIIFE(Drupal) {
  function sendMediaEvent(eventAction, eventLabel) {
    if (typeof gtag !== "function") return;
    try {
      gtag("event", "image_upload", {
        event_category: "Media",
        event_label: eventLabel,
        event_action: eventAction
      });
    } catch (err) {}
  }
  function trackAddMediaClick() {
    sendMediaEvent("add_media_click", "add_media_button");
  }
  function trackAltFieldChanged() {
    sendMediaEvent("alt_field_changed", "alt_field");
  }
  function trackAiAltGenerationClick() {
    sendMediaEvent("ai_generate_click", "ai_alt_generation");
  }
  function trackSubmitClick() {
    sendMediaEvent("submit_click", "submit");
  }
  Drupal.behaviors.vaGovMedia = {
    attach: function vaGovMediaAttach(context) {
      function attachEventToAll(selector, eventType, handler, rootContext) {
        var root = rootContext && typeof rootContext.querySelector === "function" ? rootContext : document;
        function attachIfNeeded(el) {
          if (!el.dataset["vaGovMediaAttached" + eventType]) {
            el.addEventListener(eventType, handler);
            el.dataset["vaGovMediaAttached" + eventType] = "1";
          }
        }
        Array.from(root.querySelectorAll(selector)).forEach(attachIfNeeded);
        function processNode(node) {
          if (node.nodeType !== 1) return;
          if (node.matches && node.matches(selector)) {
            attachIfNeeded(node);
          }
          if (node.querySelectorAll) {
            Array.from(node.querySelectorAll(selector)).forEach(attachIfNeeded);
          }
        }
        var mo = new MutationObserver(function (mutations) {
          mutations.forEach(function (mutation) {
            Array.from(mutation.addedNodes).forEach(processNode);
          });
        });
        mo.observe(root, {
          childList: true,
          subtree: true
        });
      }
      attachEventToAll("input[data-drupal-selector$='field-media-open-button']", "mousedown", trackAddMediaClick, context);
      attachEventToAll("input[data-drupal-selector$='field-media-open-button']", "touchstart", trackAddMediaClick, context);
      attachEventToAll("input[data-drupal-selector$='field-media-open-button']", "keydown", trackAddMediaClick, context);
      if (!document.vaGovMediaAltDelegated) {
        document.vaGovMediaAltDelegated = true;
        var altSelector = 'input[data-drupal-selector$="edit-media-0-fields-image-0-alt"]';
        var preFocusValue = new WeakMap();
        document.addEventListener("focusin", function vaGovMediaAltFocusIn(e) {
          try {
            var field = e.target && e.target.closest && e.target.closest(altSelector);
            if (!field) return;
            preFocusValue.set(field, field.value);
          } catch (err) {}
        }, true);
        document.addEventListener("focusout", function vaGovMediaAltFocusOut(e) {
          try {
            var field = e.target && e.target.closest && e.target.closest(altSelector);
            if (!field) return;
            var before = preFocusValue.get(field);
            if (field.value !== before) {
              trackAltFieldChanged();
            }
            preFocusValue.delete(field);
          } catch (err) {}
        }, true);
      }
      function delegatedAltTextRegenerateHandler(e) {
        var aiAltTextRegenerateSelector = "[data-drupal-selector*='ai-alt-text-generation']";
        var button = e.target.closest(aiAltTextRegenerateSelector);
        if (button) {
          if (e.type === "mousedown" || e.type === "touchstart" || e.type === "keydown") {
            trackAiAltGenerationClick();
          }
        }
      }
      if (!document.vaGovMediaAiRegenerateDelegated) {
        document.vaGovMediaAiRegenerateDelegated = true;
        document.addEventListener("mousedown", delegatedAltTextRegenerateHandler);
        document.addEventListener("touchstart", delegatedAltTextRegenerateHandler);
        document.addEventListener("keydown", delegatedAltTextRegenerateHandler);
      }
      function delegatedSubmitClickHandler(e) {
        var submitSelector = "button.js-form-submit.form-submit:not(.ai-alt-text-generation):not([data-drupal-selector*='ai-alt-text-generation'])";
        var button = e.target.closest(submitSelector);
        if (!button) return;
        trackSubmitClick();
      }
      if (!document.vaGovMediaSubmitDelegated) {
        document.vaGovMediaSubmitDelegated = true;
        document.addEventListener("click", delegatedSubmitClickHandler, true);
      }
    }
  };
})(Drupal);