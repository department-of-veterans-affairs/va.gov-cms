/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/
(function vaGovMediaIIFE($, once, Drupal) {
  function trackUploadFileSelection(fileName) {
    if (typeof gtag === "function") {
      gtag("event", "image_upload", {
        event_category: "Media",
        event_label: fileName || "file_selected",
        upload_action: "file_selected"
      });
    }
  }
  function trackUploadButtonClick(label) {
    if (typeof gtag === "function") {
      gtag("event", "image_upload", {
        event_category: "Media",
        event_label: label || "upload_button",
        upload_action: "button_click"
      });
    }
  }
  function trackAddMediaClick(label) {
    console.log("vaGovMedia: trackAddMediaClick called with label:", label);
    if (typeof gtag === "function") {
      gtag("event", "image_upload", {
        event_category: "Media",
        event_label: label || "add_media_button",
        upload_action: "add_media_click"
      });
    }
  }
  function trackAltFieldChanged() {
    if (typeof gtag === "function") {
      gtag("event", "image_upload", {
        event_category: "Media",
        event_label: "alt_field",
        upload_action: "alt_field_changed"
      });
    }
  }
  function trackAiAltGenerationClick() {
    if (typeof gtag === "function") {
      gtag("event", "image_upload", {
        event_category: "Media",
        event_label: "ai_alt_generation",
        upload_action: "ai_generate_click"
      });
    }
  }
  function trackSubmitClick() {
    if (typeof gtag === "function") {
      gtag("event", "image_upload", {
        event_category: "Media",
        event_label: "submit",
        upload_action: "submit_click"
      });
    }
  }
  Drupal.behaviors.vaGovMedia = {
    attach: function vaGovMediaAttach(context) {
      console.log("vaGovMedia: attach called");
      function attachEventToAll(selector, eventType, handler, rootContext) {
        var root = rootContext && typeof rootContext.querySelector === "function" ? rootContext : document;
        function attachIfNeeded(el) {
          if (!el.dataset["vaGovMediaAttached" + eventType]) {
            el.addEventListener(eventType, handler);
            el.dataset["vaGovMediaAttached" + eventType] = "1";
            console.log("[vaGovMedia] Attached '" + eventType + "' to", el, "with selector", selector);
          }
        }
        Array.from(root.querySelectorAll(selector)).forEach(attachIfNeeded);
        function processNode(node) {
          if (node.nodeType !== 1) return;
          if (node.matches && node.matches(selector)) {
            attachIfNeeded(node);
          }
          if (node.querySelectorAll) {
            Array.from(node.querySelectorAll(selector)).forEach(attachIfNeeded);
          }
        }
        var mo = new MutationObserver(function (mutations) {
          mutations.forEach(function (mutation) {
            Array.from(mutation.addedNodes).forEach(processNode);
          });
        });
        mo.observe(root, {
          childList: true,
          subtree: true
        });
      }
      function handleAddMediaMouseDown(e) {
        var label = e.target.getAttribute("aria-label") || e.target.textContent.trim();
        trackAddMediaClick(label);
      }
      function handleAddMediaTouchStart(e) {
        var label = e.target.getAttribute("aria-label") || e.target.textContent.trim();
        trackAddMediaClick(label);
      }
      function handleAddMediaKeyDown(e) {
        var label = e.target.getAttribute("aria-label") || e.target.textContent.trim();
        trackAddMediaClick(label);
      }
      function handleAltFieldChanged() {
        trackAltFieldChanged();
      }
      function handleAiAltGenerationClick() {
        trackAiAltGenerationClick();
      }
      function handleSubmitMouseDown() {
        trackSubmitClick();
      }
      function handleSubmitTouchStart() {
        trackSubmitClick();
      }
      function handleSubmitKeyDown() {
        trackSubmitClick();
      }
      attachEventToAll("input[data-drupal-selector$='field-media-open-button']", "mousedown", handleAddMediaMouseDown, context);
      attachEventToAll("input[data-drupal-selector$='field-media-open-button']", "touchstart", handleAddMediaTouchStart, context);
      attachEventToAll("input[data-drupal-selector$='field-media-open-button']", "keydown", handleAddMediaKeyDown, context);
      function delegatedAltFieldChangeHandler(e) {
        var field = e.target.closest('input[data-drupal-selector$="edit-media-0-fields-image-0-alt"]');
        if (field) {
          console.log("[vaGovMedia] Delegated alt text change fired for", field);
          trackAltFieldChanged();
        }
      }
      document.addEventListener("change", delegatedAltFieldChangeHandler);
      function delegatedAltTextRegenerateHandler(e) {
        var button = e.target.closest("input[data-drupal-selector$='edit-media-0-fields-image-0-ai-alt-text-generation-0']");
        if (button) {
          console.log("[vaGovMedia] Delegated handler fired for", button, "event type:", e.type);
          if (e.type === "mousedown" || e.type === "touchstart" || e.type === "keydown") {
            handleAiAltGenerationClick();
          }
        }
      }
      document.addEventListener("mousedown", delegatedAltTextRegenerateHandler);
      document.addEventListener("touchstart", delegatedAltTextRegenerateHandler);
      document.addEventListener("keydown", delegatedAltTextRegenerateHandler);
      function delegatedSubmitHandler(e) {
        var button = e.target.closest("button.js-form-submit.form-submit");
        if (button) {
          console.log("[vaGovMedia] Delegated handler fired for", button, "event type:", e.type);
          if (e.type === "mousedown" || e.type === "touchstart" || e.type === "keydown") {
            trackSubmitClick();
          }
        }
      }
      document.addEventListener("mousedown", delegatedSubmitHandler);
      document.addEventListener("touchstart", delegatedSubmitHandler);
      document.addEventListener("keydown", delegatedSubmitHandler);
    }
  };
})(jQuery, once, Drupal);