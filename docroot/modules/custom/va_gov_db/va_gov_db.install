<?php

/**
 * @file
 * Install file for Va Gov DB.
 */

use Drupal\Core\Utility\UpdateException;

/**
 * Uninstalls requested modules.
 *
 * @param array $modules
 *   An array of module machine names to uninstall.
 * @param bool $uninstall_dependents
 *   TRUE if dependent modules should also be uninstalled, FALSE otherwise.
 *
 * @return string
 *   A message about what requested modules were uninstalled.
 *
 * @throws Drupal\Core\Utility\UpdateException
 */
function _va_gov_db_uninstall_modules(array $modules, $uninstall_dependents = TRUE) {
  $success = \Drupal::service('module_installer')->uninstall($modules, $uninstall_dependents);
  $modules_list = implode(', ', $modules);
  if ($success) {
    return "Uninstalled the following modules: $modules_list";
  }
  else {
    // Something went wrong. Throw exception.
    throw new UpdateException(
      t("Failed to uninstall the requested modules: @modules", ['@modules' => $modules_list])
    );
  }
}

/**
 * Utility to change the max length of a text field.
 *
 * @param string $field_name
 *   Field name.
 * @param int $new_length
 *   Field length in characters.
 *
 * @throws \DrupalUpdateException
 */
function _va_gov_db_change_text_field_max_length($field_name, $new_length) {
  // The transaction opens here.
  $database = \Drupal::database();

  try {
    // Update field content tables with new max length.
    foreach (['node__', 'node_revision__'] as $prefix) {
      $database->query('
      ALTER TABLE {' . $prefix . $field_name . '}
        MODIFY ' . $field_name . '_value VARCHAR( ' . $new_length . ' )
      ');
    }

    // Update drupal storage schema.
    $storage_key = "node.field_schema_data.{$field_name}";
    $storage_schema = \Drupal::keyValue('entity.storage_schema.sql');
    $field_schema = $storage_schema->get($storage_key);
    $field_schema["node__{$field_name}"]['fields']["{$field_name}_value"]['length'] = $new_length;
    $field_schema["node_revision__{$field_name}"]['fields']["{$field_name}_value"]['length'] = $new_length;
    $storage_schema->set($storage_key, $field_schema);

    // Update field config record with new max length.
    $config = \Drupal::configFactory()
      ->getEditable("field.storage.node.{$field_name}");
    $config->set('settings.max_length', $new_length);
    $config->save(TRUE);

    // Update field storage configuration.
    // This needs to happen in the config yml.
  }
  catch (Exception $e) {
    // Something went wrong somewhere, so roll back now.
    $database->rollback();
    // Allow update to be re-run when errors are fixed.
    throw new UpdateException(
      "Failed to change $field_name field max length: " . $e->getMessage(),
      $e->getCode(), $e
    );
  }
  return "Updated field $field_name to the new size of $new_length Be sure to update vagov/config/sync/field.storage.node.{$field_name}.yml to match.";
}

/**
 * Modify field_facility_locator_api_id field to be longer.
 */
function va_gov_db_update_8001(&$sandbox) {
  $message = _va_gov_db_change_text_field_max_length('field_facility_locator_api_id', 12);

  return $message;
}

/**
 * Uninstall json_content module.
 */
function va_gov_db_update_8002(&$sandbox) {
  $messages = _va_gov_db_uninstall_modules(['json_content']);

  return $messages;
}
