<?php

/**
 * @file
 * Module hooks for va_gov_govdelivery module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\node\NodeInterface;

/**
 * Implements hook_theme().
 */
function va_gov_govdelivery_theme($existing, $type, $theme, $path) {
  return [
    'va_gov_body_alert' => [
      'path' => drupal_get_path('module', 'va_gov_govdelivery') . '/templates',
      'template' => 'va-gov-body-alert',
      'variables' => [
        'alert_title' => '',
        'alert_type' => '',
        'date_time' => '',
        'message' => '',
        'ops_page_url' => '',
        'situation_update' => FALSE,
        'vamc_name' => '',
        'vamc_url' => '',
      ],
    ],
  ];
}

/**
 * Implements hook_form_FORMID_alter().
 *
 * Disable send email field for banner alerts so that the form will only
 *  send initial email once.
 */
function va_gov_govdelivery_form_node_full_width_banner_alert_edit_form_alter(
  array &$form,
  FormStateInterface $form_state
) : void {
  $node = $form_state->getFormObject()->getEntity();
  if (va_gov_govdelivery_node_has_ever_been_published($node)) {
    $form['field_operating_status_sendemail']['widget']['#disabled'] = TRUE;
  }
}

/**
 * Check if the node has ever been published.
 *
 * @param \Drupal\node\NodeInterface $node
 *   The node to check.
 *
 * @return bool
 *   Whether or not the node has ever been published.
 */
function va_gov_govdelivery_node_has_ever_been_published(NodeInterface $node) : bool {
  $node_storage = \Drupal::entityTypeManager()->getStorage('node');
  $revision_ids = $node_storage->revisionIds($node);
  sort($revision_ids);

  foreach (array_reverse($revision_ids) as $revision_id) {
    $node_revision = \Drupal::entityTypeManager()
      ->getStorage('node')
      ->loadRevision($revision_id);

    if ($node_revision->isPublished()) {
      return TRUE;
    }
  }

  return FALSE;
}
