id: va_hub
label: Migrate all landing pages from VA.gov
migration_group: va_gov
source:
  plugin: metalsmith_source  # This is where the page urls and frontmatter come from (see MetalsmithSource.php)
  urls:     # This can be a list urls to crawl or .md files to read.
    - "https://github.com/department-of-veterans-affairs/vagov-content/blob/master/pages/health-care/index.md"
    - "https://github.com/department-of-veterans-affairs/vagov-content/blob/master/pages/disability/index.md"
    - "https://github.com/department-of-veterans-affairs/vagov-content/blob/master/pages/education/index.md"
    - "https://github.com/department-of-veterans-affairs/vagov-content/blob/master/pages/careers-employment/index.md"
    - "https://github.com/department-of-veterans-affairs/vagov-content/blob/master/pages/pension/index.md"
    - "https://github.com/department-of-veterans-affairs/vagov-content/blob/master/pages/housing-assistance/index.md"
    - "https://github.com/department-of-veterans-affairs/vagov-content/blob/master/pages/life-insurance/index.md"
    - "https://github.com/department-of-veterans-affairs/vagov-content/blob/master/pages/burials-memorials/index.md"
    - "https://github.com/department-of-veterans-affairs/vagov-content/blob/master/pages/records/index.md"
  templates:  # A list of Metalsmith templates to process (detail-page=basic page, level2-index=hub page)
    - level2-index
  fields:  # List any frontmatter fields you want to migrate.
    - description
    - plainlanguage_date
    - lastupdate
    - social

  migration_tools:
  -
    # Just leave this as is, if using metalsmith_source or url_list source.
    source: url # The field we're passing to migration_tools is called 'url'.
    source_type: url  # Source type can be either 'url' or 'html'.

    source_operations:
    -
      operation: modifier
      modifier: basicCleanup  # Tell migration_tools to run some basic cleanup of the page it just read.
    fields:
      title:  # This is the recipe for a field called 'title'.
        obtainer: ObtainTitle # Good for grabbing titles, but could just as well have used ObtainHtml here.
        jobs:
        -
          job: addSearch  # Run a job to search the DOM and assign the results to this field.
          method: pluckSelector # Also remove it from the DOM (so it doesn't show up in body, too).
          arguments:
          - 'h1'  # Look for h1 tags.
          - 1     # Only grab the first one.
          - innerHTML  # Get any html it contains.
      alert_title:
        obtainer: ObtainHtml
        jobs:
          -
            job: 'addSearch'
            method: 'pluckSelector'
            arguments:
              - '.usa-alert-heading'
              - '1'
              - innerHTML
      intro_text:
        obtainer: ObtainHtml # Generic html obtainer.
        jobs:
        -
          job: 'addSearch'
          method: 'pluckSelector'
          arguments:
            - '.va-introtext'
            - '1'
            - innerHTML
      featured_content:
        obtainer: ObtainHtml
        jobs:
        -
          job: 'addSearch'
          method: 'pluckSelector'
          arguments:
            - '.feature'
            - '1'
            - innerHTML
      related_links:
        obtainer: ObtainHtml
        jobs:
        -
          job: 'addSearch'
          method: 'pluckSelector'
          arguments:
            - '.va-nav-linkslist--related'
            - '1'
            - innerHTML
      hub_links:
        obtainer: ObtainHtml
        jobs:
        -
          job: 'addSearch'
          method: 'pluckSelector'
          arguments:
            - 'article'
            - '1'
            - HTML
      body:
        obtainer: ObtainBody
        jobs:
        -
          # First, look for a class of 'usa-width-three-fourths'.
          job: 'addSearch'
          method: 'pluckSelector'
          arguments:
            - '.usa-width-three-fourths'
            - '1'
            - innerHTML
        -
          # If it's not there, try '#content .usa-grid-full'.
          job: 'addSearch'
          method: 'pluckSelector'
          arguments:
            - '#content .usa-grid-full'
            - '1'
            - innerHTML
        -
          # If we still haven't found anything, grab the article tag.
          job: 'addSearch'
          method: 'pluckSelector'
          arguments:
          - 'article'
          - '1'
          - innerHTML
    dom_operations:
    -
      # This runs first.
      operation: get_field
      field: title  # Use the 'title' recipe from above to create the field.
    -
      # This runs next.
      operation: get_field
      field: intro_text
    -
      # And so on...
      operation: get_field
      field: featured_content
    -
      # Remove expander trigger before getting alert title
      operation: modifier
      modifier: removeSelectorAll
      arguments:
        - '#crisis-expander-link'
    -
      operation: get_field
      field: alert_title
    -
      operation: get_field
      field: related_links
    -
      # Remove any alert boxes (they'll be attached via 'alert title', above).
      operation: modifier
      modifier: removeSelectorAll
      arguments:
        - '.usa-alert'
    -
      # Clean things up before getting the body.
      # Remove javascript cruft.
      operation: modifier
      modifier: removeSelectorAll
      arguments:
      - 'button.va-btn-sidebarnav-trigger'
    -
      # Remove any scripts
      operation: modifier
      modifier: removeSelectorAll
      arguments:
        - 'script'
    -
      # Remove jump links section
      operation: modifier
      modifier: removeSelectorAll
      arguments:
      - 'h3:contains("On This Page")'
    -
      operation: modifier
      modifier: removeSelectorAll
      arguments:
      - 'li > a[href^="#"]'
    -
      # Remove starred HRs
      operation: modifier
      modifier: removeSelectorAll
      arguments:
        - '.va-h-ruled--stars'
    -
      operation: get_field
      field: hub_links

process:  # assign the fields we collected above to Drupal fields.
  title: title
  revision_timestamp: lastupdate
  field_intro_text: intro_text
  field_description: description
  field_promo:
    plugin: migration_lookup
    migration: va_promo
    source: url
  field_plainlanguage_date:
    plugin: format_date
    from_format: 'n/j/y'
    to_format: 'Y-m-d'
    source: plainlanguage_date
  field_support_services:
    -
      plugin: skip_on_empty # if source is empty, skip it
      method: process # don't process this field (but do process the rest of the row)
      source: social  # the field to check and to pass to the next step
    -
      plugin: extract # extract values from array - this returns the contents of social[0]['subsections'][1]['links']
      index:
        - 0 # heading: Ask Questions
        - subsections
        - 1
        - links
    -
      plugin: sub_process # run for each subsection in array that we extracted above
      process:
        target_id:
          plugin: migration_lookup
          migration: va_support_service
          source: title
  field_alert:
    -
      plugin: explode
      source: alert_title
      delimiter: '<br/>'
    -
      plugin: extract
      index:
        - 0
    -
      plugin: callback
      callable: strip_tags
    -
      plugin: migration_lookup
      migration: va_alert_block
  moderation_state:
    plugin: default_value
    default_value: published
  type:
    plugin: default_value   # We want to asign the 'type' field a static value.
    default_value: landing_page # The value is 'landing_page'.

destination:
  plugin: 'entity:node'

migration_dependencies:
  required:
    - va_promo
    - va_support_service
    - va_alert_block

# This belongs in all migration scripts. Without it the module the migration script belongs to won't uninstall cleanly.
dependencies:
  enforced:
    module:
    - va_gov_migrate  # The module this migration script belongs to.
