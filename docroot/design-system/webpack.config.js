const path = require("path");
const MiniCssExtractPlugin = require("mini-css-extract-plugin");
const webpack = require("webpack");
const TerserPlugin = require("terser-webpack-plugin");

const isProduction = process.env.NODE_ENV === "production";

const config = {
  devtool: "source-map",
  entry: "./components/index.js",
  cache: {
    type: "memory",
  },
  module: {
    rules: [
      {
        test: /\.(js|jsx)$/i,
        exclude: ["/node_modules/core-js/", "/node_modules/webpack/buildin/"],
        loader: "babel-loader",
      },
      {
        test: /\.(s[ac]ss|css)$/i,
        use: [
          // Extract and save the final CSS.
          MiniCssExtractPlugin.loader,
          // Load the CSS, set url = false to prevent following urls to fonts and images.
          {
            loader: "css-loader",
            options: {
              url: false,
              importLoaders: 2,
              sourceMap: true,
            },
          },
          // Add browser prefixes.
          {
            loader: "postcss-loader",
            options: {
              postcssOptions: {
                plugins: () => [
                  require("autoprefixer")({
                    browsers: [
                      ">1%",
                      "last 2 versions",
                      "Firefox ESR",
                      "not ie < 9",
                    ],
                  }),
                ],
              },
              sourceMap: true,
            },
          },
          // Load the SCSS/SASS
          {
            loader: "sass-loader",
            options: {
              // Prefer `dart-sass`
              implementation: require("sass"),
              sourceMap: true,
              sassOptions: {
                sourceMapIncludeSources: true,
              },
            },
          },
        ],
      },
      {
        test: /\.twig/,
        use: [
          // Output twig files to theme as well for easy namespacing. See vagovclaro.info.yml.
          {
            loader: "file-loader",
            options: {
              emitFile: true,
              name: "[path][name].[ext]",
            },
          },
        ],
      },
      {
        test: /\.(eot|svg|ttf|woff|woff2|png|jpg|gif)$/i,
        type: "asset",
      },

      // Add your rules for custom modules here
      // Learn more about loaders from https://webpack.js.org/loaders/
    ],
  },
  optimization: {
    chunkIds: "named",
    usedExports: false,
    mangleExports: false,
    moduleIds: "named",
  },
  output: {
    filename: "ds-drupal.js",
    sourceMapFilename: "[file].map",
    // output to the theme for .libraries.yml consumption
    path: path.resolve(__dirname, "../themes/custom/vagovclaro/dist"),

    clean: false, // so we don't overwrite styles generated by `composer va:theme:compile`
  },
  plugins: [
    new MiniCssExtractPlugin({
      filename: "ds-drupal.styles.css",
      chunkFilename: "[id].css",
    }),
    new webpack.optimize.LimitChunkCountPlugin({
      maxChunks: 1,
    }),
  ],
};

module.exports = () => {
  if (isProduction) {
    config.mode = "production";
  } else {
    config.mode = "development";
  }
  return config;
};
