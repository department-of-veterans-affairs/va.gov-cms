name: Cypress
on:
  workflow_dispatch:
    inputs:
      preview_url:
        description: 'Environment to run tests against'
        type: 'string'
        required: true
      pull_request:
        description: 'Pull Request number'
        type: 'string'
        required: true
      commit_sha:
        description: 'SHA of commit on which to update statuses'
        type: 'string'
        required: true

jobs:

  # Cypress tests, hopefully with parallelization. 
  cypress:
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        # Let's try splitting tests four ways.
        containers: [1, 2, 3, 4]
    steps:

      - name: Checkout
        # https://github.com/actions/cache/releases/tag/v3.0.10
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
        with:
          # When Sorry-Cypress support is enabled on `main`, this should be
          # removed so that the `main` version of the workflow is used.
          ref: ${{ inputs.commit_sha }}

      - name: Setup the Node environment
        # https://github.com/actions/setup-node/releases/tag/v3.6.0
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c
        with:
          node-version: '18.13'

      - name: Run Cypress Against Sorry-Cypress
        run: |
          export CY_BUILD_ID="${{ github.repository }}-${{ github.run_id }}-${{ github.run_attempt}}"
          npm run test:cypress:parallel
        env:
          CYPRESS_BASE_URL: "${{ inputs.preview_url }}"

      - name: Update status on commit.
        # https://github.com/actions/github-script/releases/tag/v6.4.0
        uses: actions/github-script@98814c53be79b1d30f795b907e553d8679345975
        with:
          script: |
            await octokit.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: inputs.commit_sha,
              state: context.job.status,
              description: `Cypress tests ${context.job.status}`,
            })
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
