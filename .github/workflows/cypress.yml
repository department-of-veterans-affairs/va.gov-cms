name: Cypress
on:
  workflow_dispatch:
    inputs:
      preview_url:
        description: 'Environment to run tests against'
        type: 'string'
        required: true
      preview_id:
        description: 'Tugboat Preview ID'
        type: 'string'
        required: true
      pull_request:
        description: 'Pull Request number'
        type: 'string'
        required: true
      commit_sha:
        description: 'SHA of commit on which to update statuses'
        type: 'string'
        required: true

jobs:

  # Cypress tests, hopefully with parallelization. 
  cypress:
    runs-on: [self-hosted]
    strategy:
      fail-fast: false
      matrix:
        # Let's try splitting tests four ways.
        containers: [1, 2, 3, 4]
    timeout-minutes: 30
    env:
      NODE_EXTRA_CA_CERTS: /etc/ssl/certs/VA-Internal-S2-RCA-combined.pem
    container:
      image: public.ecr.aws/cypress-io/cypress/browsers:node16.14.2-slim-chrome103-ff102
      options: --user 0 --workdir /github/workspace
      volumes:
        - /usr/local/share:/share
        - /etc/ssl/certs

    steps:

      - name: Checkout
        # https://github.com/actions/cache/releases/tag/v3.0.10
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8

      # Required for Docker
      - name: Move VA cert to /etc/ssl/certs
        run: mv certs/VA-Internal-S2-RCA-combined.pem /etc/ssl/certs/

      - name: Setup the Node environment
        # https://github.com/actions/setup-node/releases/tag/v3.6.0
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c
        with:
          node-version: '16.0'

      - name: Use the NPM cache, if possible
        id: cache-npm
        # https://github.com/actions/cache/releases/tag/v3.0.10
        uses: actions/cache@56461b9eb0f8438fd15c7a9968e3c9ebb18ceff1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Create Tugboat configuration.
        run: |
          echo "token: ${TUGBOAT_API_TOKEN}" > $HOME/.tugboat.yml
          echo "api: https://api.tugboat.vfs.va.gov" >> $HOME/.tugboat.yml
          echo "insecure: true" >> $HOME/.tugboat.yml
        env:
          TUGBOAT_API_TOKEN: ${{ secrets.TUGBOAT_API_TOKEN }}

      - name: Setup Tugboat CLI
        run: |
          curl -kLO https://tugboat.vfs.va.gov/cli/linux/tugboat.tar.gz
          tar -zxf tugboat.tar.gz -C /usr/local/bin/
          mkdir -p docroot/cypress
          chmod -R 777 docroot/cypress

      - name: Install Node package dependencies
        run: npm install

      - name: Cypress run
        # https://github.com/cypress-io/github-action/releases/tag/v5.1.0
        uses: cypress-io/github-action@cdbbcd60fb5d967d7a37d8eb148add76a7ded7b6
        with:
          wait-on: "${{ inputs.preview_url }}"
          command: 'npm run test:cypress:parallel'
        env:
          CYPRESS_BASE_URL: "${{ inputs.preview_url }}"
          CYPRESS_IN_GHA: 'true'
          CYPRESS_BUILD_ID: "${{ github.repository }}-${{ github.run_id }}-${{ github.run_attempt}}"
          TUGBOAT_PREVIEW_ID: "${{ inputs.preview_id }}"
          
      - name: Update status on commit.
        # https://github.com/actions/github-script/releases/tag/v6.4.0
        uses: actions/github-script@98814c53be79b1d30f795b907e553d8679345975
        with:
          script: |
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: inputs.commit_sha,
              state: context.job.status,
              description: `Cypress tests ${context.job.status}`,
            })
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
