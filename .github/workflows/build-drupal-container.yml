name: Build and Push Drupal Container to ECR

on:
  workflow_dispatch:
  pull_request:
    types:
      - closed # Trigger when the pull request is closed
    branches:
      - main # Only triggers on PRs targeting main branch

# Add concurrency to prevent parallel executions
concurrency:
  group: drupal-container-build
  cancel-in-progress: false

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  build-and-push:
    if: github.event_name == 'workflow_dispatch' || github.event.pull_request.merged == true # Allow manual runs and merged PRs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5.0.0
        with:
          aws-region: us-gov-west-1
          role-to-assume: ${{ vars.AWS_ASSUME_ROLE }}
          role-duration-seconds: 900
          role-session-name: vsp-vagov-next-build-githubaction

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Get last Apache image tag
        id: get_last_apache_tag
        run: |
          REPO_NAME="dsva/cms-apache"
          # Get all images sorted by push date (newest first)
          LAST_TAG="1.0.0"  # Default fallback
          IMAGES_JSON=$(aws ecr describe-images --repository-name $REPO_NAME --query 'sort_by(reverse(imageDetails),& imagePushedAt)' --output json)
          SEMVER_TAG=$(echo "$IMAGES_JSON" | jq -r '
            [.[] | select(.imageTags != null) |
             .imageTags[] | select(test("^[0-9]+\\.[0-9]+\\.[0-9]+$"))] |
            last
          ')

          LAST_TAG="$SEMVER_TAG"

          echo "LAST_TAG=$LAST_TAG" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          file: ./Dockerfile
          push: true
          provenance: false
          tags: ${{ steps.login-ecr.outputs.registry }}/dsva/cms-drupal:${{ github.sha }}
          cache-from: type=registry,ref=${{ steps.login-ecr.outputs.registry }}/dsva/cms-drupal:cache
          cache-to: type=registry,mode=max,image-manifest=true,oci-mediatypes=true,ref=${{ steps.login-ecr.outputs.registry }}/dsva/cms-drupal:cache
          build-args: |
            BUILDKIT_INLINE_CACHE=1
            BASE_IMAGE_TAG=${{ env.LAST_TAG }}
            DD_GIT_COMMIT_SHA=${{ github.sha }}

  deploy-to-dev:
    needs: build-and-push
    uses: department-of-veterans-affairs/va.gov-cms/.github/workflows/update-manifest.yml@main
    with:
      image_tag: ${{ github.sha }}
      app_name: cms
      environment: dev
