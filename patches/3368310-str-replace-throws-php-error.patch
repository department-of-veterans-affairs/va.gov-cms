diff --git a/src/Plugin/migrate/process/StrReplace.php b/src/Plugin/migrate/process/StrReplace.php
index 08dece7..9263d2f 100644
--- a/src/Plugin/migrate/process/StrReplace.php
+++ b/src/Plugin/migrate/process/StrReplace.php
@@ -5,6 +5,7 @@ declare(strict_types = 1);
 namespace Drupal\migrate_plus\Plugin\migrate\process;
 
 use Drupal\migrate\MigrateExecutableInterface;
+use Drupal\migrate\MigrateSkipProcessException;
 use Drupal\migrate\ProcessPluginBase;
 use Drupal\migrate\Row;
 
@@ -114,6 +115,16 @@ class StrReplace extends ProcessPluginBase {
    */
   public function transform($value, MigrateExecutableInterface $migrate_executable, Row $row, $destination_property) {
     $this->multiple = is_array($value);
+    if (!$this->multiple) {
+      $test_array = [$value];
+    } else {
+      $test_array = $value;
+    }
+    foreach ($test_array as $test_value) {
+      if (!is_string($test_value)) {
+        throw new MigrateSkipProcessException("The input value must be a string or an array of strings.");
+      }
+    }
     $this->configuration += [
       'case_insensitive' => FALSE,
       'regex' => FALSE,
diff --git a/tests/src/Unit/process/StrReplaceTest.php b/tests/src/Unit/process/StrReplaceTest.php
index 320c4c9..81dd4ae 100644
--- a/tests/src/Unit/process/StrReplaceTest.php
+++ b/tests/src/Unit/process/StrReplaceTest.php
@@ -4,6 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\Tests\migrate_plus\Unit\process;
 
+use Drupal\migrate\MigrateSkipProcessException;
 use Drupal\migrate_plus\Plugin\migrate\process\StrReplace;
 use Drupal\Tests\migrate\Unit\process\MigrateProcessTestCase;
 
@@ -16,6 +17,20 @@ use Drupal\Tests\migrate\Unit\process\MigrateProcessTestCase;
 final class StrReplaceTest extends MigrateProcessTestCase {
 
   /**
+   * Test for a simple str_replace with NULL in $value.
+   */
+  public function testStrReplaceNull(): void {
+    $configuration = [];
+    $value = NULL;
+    $configuration['search'] = 'et';
+    $configuration['replace'] = 'that';
+    $this->expectException(MigrateSkipProcessException::class);
+    $this->expectExceptionMessage('The input value must be a string or an array of strings.');
+    $plugin = new StrReplace($configuration, 'str_replace', []);
+    $actual = $plugin->transform($value, $this->migrateExecutable, $this->row, 'destinationproperty');
+  }
+
+  /**
    * Test for a simple str_replace string.
    */
   public function testStrReplace(): void {
