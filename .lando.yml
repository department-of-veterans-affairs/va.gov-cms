name: va-gov-cms
recipe: drupal8
config:
  webroot: docroot
  php: "7.1"

events:
  post-db-import:
    # @TODO: Change to `composer yaml-tests va/deploy` once the "filter argument" feature is in place.
    - appserver: cd $LANDO_WEBROOT && /app/bin/drush cache-rebuild -y
    - appserver: cd $LANDO_WEBROOT && /app/bin/drush updatedb -y
    - appserver: cd $LANDO_WEBROOT && /app/bin/drush cache-rebuild -y
    - appserver: cd $LANDO_WEBROOT && /app/bin/drush config:import -y
    - appserver: cd $LANDO_WEBROOT && /app/bin/drush cache-rebuild -y

  # Runs composer install after app starts
  post-start:
    - appserver: cd $LANDO_MOUNT && composer install

  # After code changes
  post-update:
    - appserver: cd $LANDO_MOUNT && composer install
    - appserver: cd $LANDO_WEBROOT && drush updb -y &&  drush cr -y

services:
  appserver:
    run_as_root:
      - "apt-get update -y"
      - "apt-get install build-essential chrpath libssl-dev libxft-dev libfreetype6-dev libfreetype6 libfontconfig1-dev libfontconfig1 -y"
    xdebug: false
    config:
      php: .lando/zzz-lando-my-custom.ini
    overrides:
      environment:
        # You must manually `export` these ENV vars before uncommenting, then run `lando rebuild`
        # @see /README.md Build Trigger section
        #        VA_CMS_BOT_GITHUB_AUTH_TOKEN: ${VA_CMS_BOT_GITHUB_AUTH_TOKEN}
        #        CMS_JENKINS_VA_CMS_BOT_TOKEN: ${CMS_JENKINS_VA_CMS_BOT_TOKEN}
        #        ENVIRONMENT_TYPE: ${ENVIRONMENT_TYPE}
        #        JENKINS_BUILD_ENV: ${JENKINS_BUILD_ENV}
        # Support debugging Drush with XDEBUG. Listen in PHPStorm then `lando drush` to trigger xdebug.
        PHP_IDE_CONFIG: "serverName=appserver"

  # Uncomment this to work on site build triggers, then export ENV vars below, then `lando rebuild`.
  # Must use lando 3.0.0-rc9+
  # @see /README.md Build Trigger section
#  va-socks-proxy:
#    type: compose
#    services:
#      image: va/socks-proxy
#      build:
#        context: ./docker/images/va-socks-proxy
#        dockerfile: Dockerfile
#      restart: on-failure
#      # Only way to run a custom entrypoint in Lando
#      # @see https://docs.devwithlando.io/tutorials/compose.html#configuration
#      command: /entrypoint.sh
#      environment:
#        # Must export these first, @see /README.md.
#        VA_SOCKS_PROXY_PRIVATE_KEY: ${VA_SOCKS_PROXY_PRIVATE_KEY}
#        VA_SOCKS_PROXY_SSH_CONFIG: ${VA_SOCKS_PROXY_SSH_CONFIG}

# Lando Tooling
#
# The list of commands below, under 'tooling' become `lando x` commands.
#
# You do NOT have to restart lando or the environment when you make changes to this file.
# You DO have to reload the command cache by calling `lando` by itself or `lando --clear`.
#
# See https://docs.lando.dev/config/tooling.html#usage

tooling:

  migrate-sync:
    description: Copy migration ymls from va_gov_migrate to config/sync and run config import. Always edit in va_gov_migrate.
    service: appserver
    cmd: cp -r /app/docroot/modules/custom/va_gov_migrate/config/install/. /app/config/sync/  && drush config-import --partial --source=/app/docroot/modules/custom/va_gov_migrate/config/install/

  test:
    description: Run all VA.gov tests, as defined in tests.yml. Add arguments to run subsets of tests. For example. "lando test deploy" will run all of the "va/deploy/*" tests.
    service: appserver
    cmd: composer yaml-tests

  # "drush" being here overrides the default "lando drush" command.
  # Using /app/bin/drush means we are using the site-local drush directly.
  # The reason it does not need "service" is because "drush" already has "service" set!
  drush:
    cmd: /app/bin/drush

  # Build the web front-end
  web-build:
    service: appserver
    cmd: "composer va:web:build"

  xdebug-on:
    service: appserver
    description: Enable xdebug for apache.
    cmd: "docker-php-ext-enable xdebug && /etc/init.d/apache2 reload"
    user: root

  xdebug-off:
    service: appserver
    description: Disable xdebug for apache.
    cmd: "rm /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini && /etc/init.d/apache2 reload"
    user: root


  phpunit:
    service: appserver
    description: "Run VA PHPUnit tests found in va/tests/phpunit: lando phpunit. Syntax: lando phpunit"
    cmd: "composer yaml-tests va/tests/phpunit"

  phpunit-run:
    service: appserver
    description: "Run specific PHPUnit tests: lando phpunit-run {docroot/MODULE/PATH/TO/TESTS} --filter {testName}"
    cmd: "/app/bin/phpunit --debug --exclude-group disabled --verbose --colors=always"

  behat:
    service: appserver
    description: "Run behat tests located in ./tests/behat"
    cmd: cd /app/tests/behat && /app/bin/behat

  test_filter_test:
    service: appserver
    description: "Run this command to see the strange problem where `lando test behat` does not work."
    cmd: "composer yaml-tests va/tests/behat"

  test_performance:
    service: appserver
    cmd: "php scale.php"

  # NPM and NODE are now installed via composer install: this ensures version consistency.
  npm:
    service: appserver
    cmd: /app/bin/npm
  node:
    service: appserver
    cmd: /app/bin/npm

  # Deprecated.
  # Moved to scripts/sync-db.sh
  sync-db:
    service: appserver
    description: This command has moved to a non-lando command, from app root run like this `scripts/sync-db.sh`.
    cmd: 'echo "This command has moved to a non-lando command, from app root run like this `scripts/sync-db.sh`."'

  # Deprecated.
  # Moved to scripts/sync-files.sh
  sync-files:
    service: appserver
    description: This command has moved to a non-lando command, from app root run like this `scripts/sync-files.sh`.
    cmd: 'echo "This command has moved to a non-lando command, from app root run like this `scripts/sync-files.sh`."'
